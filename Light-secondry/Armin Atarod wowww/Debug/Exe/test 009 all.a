;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdbool.h>
;#include <delay.h>
;#include <i2c.h>
;#asm
;PCODE: $0000000D VOL: 0
    .equ __lcd_port=0x15;PORTC
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0007 #endasm
;#include <lcd.h>
;#define centered k < 20 && k > -20
;#define middled SB < backmax2 && SB > backmax3
;#define lefted k > 20
;#define righted k < -20
;#define fronted SB < backmax3
;#define backed SB > backmax2
;#define center k,-k,-k,k
;#define back -v,-v,v,v
;#define forward v,v,-v,-v
;#define right v,-v,-v,v
;#define left -v,v,v,-v
;#define stop 0,0,0,0
;
;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
;unsigned int read_adc(unsigned char adc_input)
; 0000 0018 {

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0019 ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $00000012 VOL: 0
;	adc_input -> Y+0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 001A // Delay needed for the stabilization of the ADC input voltage
; 0000 001B delay_us(10);
;PCODE: $00000016 VOL: 0
; 0000 001C // Start the AD conversion
; 0000 001D ADCSRA|=(1<<ADSC);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 001E // Wait for the AD conversion to complete
; 0000 001F while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0020 ADCSRA|=(1<<ADIF);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0021 return ADCW;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0022 }
;PCODE: $00000024 VOL: 0
;#define EEPROM_BUS_ADDRESS 0xc0
;unsigned char compass_read(unsigned char address)
; 0000 0025  {
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0026     unsigned char data;
; 0000 0027     delay_us(100);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;	address -> Y+1
;	data -> R17
;PCODE: $00000029 VOL: 0
; 0000 0028     i2c_start();
;PCODE: $0000002A VOL: 0
; 0000 0029     delay_us(100);
;PCODE: $0000002B VOL: 0
; 0000 002A     i2c_write(EEPROM_BUS_ADDRESS);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 002B     delay_us(100);
;PCODE: $0000002E VOL: 0
; 0000 002C     i2c_write(address);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 002D     delay_us(100);
;PCODE: $00000031 VOL: 0
; 0000 002E     i2c_start();
;PCODE: $00000032 VOL: 0
; 0000 002F     delay_us(100);
;PCODE: $00000033 VOL: 0
; 0000 0030     i2c_write(EEPROM_BUS_ADDRESS | 1);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0031     delay_us(100);
;PCODE: $00000036 VOL: 0
; 0000 0032     data=i2c_read(0);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0033     delay_us(100);
;PCODE: $0000003A VOL: 0
; 0000 0034     i2c_stop();
;PCODE: $0000003B VOL: 0
; 0000 0035     delay_us(100);
;PCODE: $0000003C VOL: 0
; 0000 0036     return data;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0037  }
;PCODE: $00000042 VOL: 0
;
;int i,imin,min;
;int SL,SB,SR,k;
;int SKF,SKL,SKB,SKR;
;int print_lcd = 1;  //0: none   -   1: ir-cmp-sharp   -   2: ir-cmp-kaf

	.DSEG
;int old_print_lcd = 1;
;int cmp;
;int v = 255;
;int position;
;int action;
;bool setcmp, setback1,setback2,setback3, setkaf1,setkaf2,setkaf3,setkaf4, setzamin1,setzamin2,setzamin3,setzamin4;
;char out=0;
;eeprom int c, kafmin1,kafmin2,kafmin3,kafmin4, kafmax1,kafmax2,kafmax3,kafmax4, kafmid1,kafmid2,kafmid3,kafmid4, backmax ...
;
;void sensor()
; 0000 0047 {

	.CSEG
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0048     //read IR
; 0000 0049     {
; 0000 004A     min = 1023;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 004B     for (i = 0 ; i < 16 ; i++)
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 004C     {
; 0000 004D         PORTB.7 = (i/8)%2;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 004E         PORTB.6 = (i/4)%2;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 004F         PORTB.5 = (i/2)%2;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0050         PORTB.4 = (i/1)%2;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0051         if (read_adc(0) < min)
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0052         {
; 0000 0053             min = read_adc(0);
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0054             imin = i;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0055         }
; 0000 0056     }
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0057     }
; 0000 0058 
; 0000 0059     //print IR
; 0000 005A     if (print_lcd == 1 || print_lcd == 2)
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 005B     {
; 0000 005C         lcd_gotoxy(0,0);
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 005D         lcd_putchar((imin/10)%10 + '0');
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 005E         lcd_putchar((imin/1)%10 + '0');
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 005F         lcd_putsf(":");
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0060         lcd_putchar((min/100)%10 + '0');
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 0061         lcd_putchar((min/10)%10 + '0');
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0062         lcd_putchar((min/1)%10 + '0');
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0063     }
; 0000 0064 
; 0000 0065     //read sharp
; 0000 0066     {
;PCODE: $000000CC VOL: 0
; 0000 0067         SB = read_adc(1);
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 0068         SR = read_adc(2);
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 0069         SL = read_adc(3);
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 006A         k = SL-SR;
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 006B     }
; 0000 006C 
; 0000 006D     //print sharp
; 0000 006E     if (print_lcd == 1)
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 006F     {
; 0000 0070         lcd_gotoxy(0,1);
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0071         lcd_putsf("L");
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 0072         lcd_putchar((SL/100)%10 + '0');
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 0073         lcd_putchar((SL/10)%10 + '0');
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 0074         lcd_putchar((SL/1)%10 + '0');
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 0075         lcd_gotoxy(5,1);
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 0076         lcd_putsf("B");
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 0077         lcd_putchar((SB/100)%10 + '0');
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 0078         lcd_putchar((SB/10)%10 + '0');
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 0079         lcd_putchar((SB/1)%10 + '0');
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 007A         lcd_gotoxy(10,1);
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 007B         lcd_putsf("R");
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 007C         lcd_putchar((SR/100)%10 + '0');
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 007D         lcd_putchar((SR/10)%10 + '0');
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 007E         lcd_putchar((SR/1)%10 + '0');
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 007F     }
; 0000 0080 
; 0000 0081     //read kaf
; 0000 0082     {
;PCODE: $0000013A VOL: 0
; 0000 0083         SKF = read_adc(4);
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 0084         SKL = read_adc(5);
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 0085         SKR = read_adc(6);
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 0086         SKB = read_adc(7);
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 0087     }
; 0000 0088 
; 0000 0089     //print kaf
; 0000 008A     if (print_lcd == 2)
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 008B     {
; 0000 008C         lcd_gotoxy(0,1);
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 008D         lcd_putchar((SKL/100)%10 + '0');
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 008E         lcd_putchar((SKL/10)%10 + '0');
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 008F         lcd_putchar((SKL/1)%10 + '0');
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 0090         lcd_gotoxy(4,1);
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 0091         lcd_putchar((SKB/100)%10 + '0');
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 0092         lcd_putchar((SKB/10)%10 + '0');
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 0093         lcd_putchar((SKB/1)%10 + '0');
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 0094         lcd_gotoxy(8,1);
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 0095         lcd_putchar((SKR/100)%10 + '0');
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 0096         lcd_putchar((SKR/10)%10 + '0');
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
; 0000 0097         lcd_putchar((SKR/1)%10 + '0');
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 0098         lcd_gotoxy(12,1);
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 0099         lcd_putchar((SKF/100)%10 + '0');
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 009A         lcd_putchar((SKF/10)%10 + '0');
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 009B         lcd_putchar((SKF/1)%10 + '0');
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 009C     }
; 0000 009D 
; 0000 009E     //read cmp
; 0000 009F     {
;PCODE: $000001BA VOL: 0
; 0000 00A0         #asm("wdr");
;PCODE: $000001BB VOL: 0
	wdr
;PCODE: $000001BC VOL: 0
; 0000 00A1         cmp=compass_read(1)-c;
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 00A2 
; 0000 00A3         if(cmp>128)  cmp=cmp-255;
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
; 0000 00A4         if(cmp<-128) cmp=cmp+255;
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 00A5     }
;PCODE: $000001D3 VOL: 0
; 0000 00A6 
; 0000 00A7     //print cmp
; 0000 00A8     if (print_lcd == 1 || print_lcd == 2)
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 00A9     {
; 0000 00AA         lcd_gotoxy(11,0);
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 00AB         if(cmp>=0)
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 00AC         {
; 0000 00AD             lcd_putchar('+');
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 00AE             lcd_putchar((cmp/100)%10+'0');
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
; 0000 00AF             lcd_putchar((cmp/10)%10+'0');
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0000 00B0             lcd_putchar((cmp/1)%10+'0');
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 00B1         }
; 0000 00B2         else
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 00B3         {
; 0000 00B4             lcd_putchar('-');
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 00B5             lcd_putchar((-cmp/100)%10+'0');
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0000 00B6             lcd_putchar((-cmp/10)%10+'0');
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0000 00B7             lcd_putchar((-cmp/1)%10+'0');
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 00B8         }
;PCODE: $0000021F VOL: 0
; 0000 00B9     }
; 0000 00BA 
; 0000 00BB     //multiply
; 0000 00BC     {
;PCODE: $00000220 VOL: 0
; 0000 00BD         if (cmp > -20 && cmp < 20)
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
; 0000 00BE         {
; 0000 00BF             cmp*=-4;
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
; 0000 00C0         }
; 0000 00C1         else
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 00C2         {
; 0000 00C3             cmp*=-2;
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
; 0000 00C4         }
;PCODE: $00000236 VOL: 0
; 0000 00C5     }
; 0000 00C6 }
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;
;void motor(int ml1,int ml2,int mr2,int mr1)
; 0000 00C9     {
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0000 00CA     #asm("wdr");
;PCODE: $0000023B VOL: 0
;	ml1 -> Y+6
;	ml2 -> Y+4
;	mr2 -> Y+2
;	mr1 -> Y+0
;PCODE: $0000023C VOL: 0
	wdr
;PCODE: $0000023D VOL: 0
; 0000 00CB     {
; 0000 00CC         ml1+=cmp;
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0000 00CD         ml2+=cmp;
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
; 0000 00CE         mr2+=cmp;
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
; 0000 00CF         mr1+=cmp;
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
; 0000 00D0     }
; 0000 00D1 
; 0000 00D2     if (SB < 170 && SL > 250)
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 00D3     {
; 0000 00D4         ml1 += 30;
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 00D5         ml2 += 30;
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
; 0000 00D6         mr2 += 30;
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 00D7         mr1 += 30;
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0000 00D8     }
; 0000 00D9 
; 0000 00DA     else if (SB < 170 && SR > 250)
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
; 0000 00DB     {
; 0000 00DC         ml1 -= 30;
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
; 0000 00DD         ml2 -= 30;
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
; 0000 00DE         mr2 -= 30;
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
; 0000 00DF         mr1 -= 30;
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
; 0000 00E0     }
; 0000 00E1 
; 0000 00E2     {
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 00E3         if(ml1>255) ml1=255;
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
; 0000 00E4         if(ml2>255) ml2=255;
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
; 0000 00E5         if(mr2>255) mr2=255;
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
; 0000 00E6         if(mr1>255) mr1=255;
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
; 0000 00E7 
; 0000 00E8         if(ml1<-255) ml1=-255;
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
; 0000 00E9         if(ml2<-255) ml2=-255;
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 00EA         if(mr2<-255) mr2=-255;
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
; 0000 00EB         if(mr1<-255) mr1=-255;
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
; 0000 00EC     }
;PCODE: $000002AD VOL: 0
; 0000 00ED     //////////////mr1
; 0000 00EE     {
; 0000 00EF     if(mr1>=0)
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 00F0     {
; 0000 00F1         #asm("wdr");
;PCODE: $000002B1 VOL: 0
	wdr
;PCODE: $000002B2 VOL: 0
; 0000 00F2         PORTD.0=0;
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
; 0000 00F3         OCR0=mr1;
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
; 0000 00F4     }
; 0000 00F5     else
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
; 0000 00F6     {
; 0000 00F7         #asm("wdr");
;PCODE: $000002B9 VOL: 0
	wdr
;PCODE: $000002BA VOL: 0
; 0000 00F8         PORTD.0=1;
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
; 0000 00F9         OCR0=mr1+255;
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
; 0000 00FA     }
;PCODE: $000002C0 VOL: 0
; 0000 00FB     }
; 0000 00FC     //////////////mr2
; 0000 00FD     {
; 0000 00FE     if(mr2>=0)
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 00FF     {
; 0000 0100         #asm("wdr");
;PCODE: $000002C4 VOL: 0
	wdr
;PCODE: $000002C5 VOL: 0
; 0000 0101         PORTD.1=0;
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
; 0000 0102         OCR1B=mr2;
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
; 0000 0103     }
; 0000 0104     else
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
; 0000 0105     {
; 0000 0106         #asm("wdr");
;PCODE: $000002CC VOL: 0
	wdr
;PCODE: $000002CD VOL: 0
; 0000 0107         PORTD.1=1;
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
; 0000 0108         OCR1B=mr2+255;
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
; 0000 0109     }
;PCODE: $000002D3 VOL: 0
; 0000 010A     }
; 0000 010B     //////////////mL2
; 0000 010C     {
; 0000 010D     if(ml2>=0)
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
; 0000 010E     {
; 0000 010F         #asm("wdr");
;PCODE: $000002D7 VOL: 0
	wdr
;PCODE: $000002D8 VOL: 0
; 0000 0110         PORTD.2=0;
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
; 0000 0111         OCR1A=ml2;
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
; 0000 0112     }
; 0000 0113     else
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
; 0000 0114     {
; 0000 0115         #asm("wdr");
;PCODE: $000002DF VOL: 0
	wdr
;PCODE: $000002E0 VOL: 0
; 0000 0116         PORTD.2=1;
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
; 0000 0117         OCR1A=ml2+255;
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
; 0000 0118     }
;PCODE: $000002E6 VOL: 0
; 0000 0119         }
; 0000 011A     //////////////ml1
; 0000 011B     {
; 0000 011C     if(ml1>=0)
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
; 0000 011D     {
; 0000 011E         #asm("wdr");
;PCODE: $000002EA VOL: 0
	wdr
;PCODE: $000002EB VOL: 0
; 0000 011F         PORTD.3=0;
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
; 0000 0120         OCR2=ml1;
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
; 0000 0121     }
; 0000 0122     else
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
; 0000 0123     {
; 0000 0124         #asm("wdr");
;PCODE: $000002F2 VOL: 0
	wdr
;PCODE: $000002F3 VOL: 0
; 0000 0125         PORTD.3=1;
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
; 0000 0126         OCR2=ml1+255;
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
; 0000 0127     }
;PCODE: $000002F9 VOL: 0
; 0000 0128     }
; 0000 0129 }
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;
;void check()
; 0000 012C {
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
; 0000 012D     if(SKB>kafmid3 || SKR>kafmid2 || SKL>kafmid4)
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
; 0000 012E     {
; 0000 012F         if(SKR>kafmid2)
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
; 0000 0130         {
; 0000 0131             if(SL>400)
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
; 0000 0132             {
; 0000 0133                 motor(v,-v,-v,v);
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
; 0000 0134                 out='L';
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
; 0000 0135             }
; 0000 0136             else
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
; 0000 0137             {
; 0000 0138                 motor(-v,v,v,-v);
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
; 0000 0139                 out='R';
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
; 0000 013A             }
;PCODE: $00000333 VOL: 0
; 0000 013B         }
; 0000 013C         else if(SKL>kafmid4)
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
; 0000 013D         {
; 0000 013E             if(SR>400)
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
; 0000 013F             {
; 0000 0140                 motor(-v,v,v,-v);
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
; 0000 0141                 out='R';
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
; 0000 0142             }
; 0000 0143             else
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
; 0000 0144             {
; 0000 0145                 motor(v,-v,-v,v);
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
; 0000 0146                 out='L';
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
; 0000 0147             }
;PCODE: $00000359 VOL: 0
; 0000 0148         }
; 0000 0149         else if(SKB>kafmid3)
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
; 0000 014A         {
; 0000 014B             if(SB>200)
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
; 0000 014C             {
; 0000 014D                 motor(-v,v,v,-v);
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
; 0000 014E                 out='B';
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
; 0000 014F             }
; 0000 0150         }
;PCODE: $00000371 VOL: 0
; 0000 0151     }
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
; 0000 0152     else
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
; 0000 0153     {
; 0000 0154         while(out=='R' && min < 800 && imin >= 0 && imin <= 8)
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
; 0000 0155         {
; 0000 0156             sensor();
;PCODE: $00000387 VOL: 0
; 0000 0157             if(SR>250)   motor(-v,v,v,-v);
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
; 0000 0158             else  motor(0,0,0,0);
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
; 0000 0159         }
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
; 0000 015A         while(out=='L' && min < 800 && imin <= 15 && imin >= 8)
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
; 0000 015B         {
; 0000 015C             sensor();
;PCODE: $000003B5 VOL: 0
; 0000 015D             if(SL>250)   motor(v,-v,-v,v);
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
; 0000 015E             else  motor(0,0,0,0);
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
; 0000 015F         }
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
; 0000 0160         while(out=='B' && min < 800 && imin >= 4 && imin <= 12)
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
; 0000 0161         {
; 0000 0162             sensor();
;PCODE: $000003E2 VOL: 0
; 0000 0163             if(SB>250)   motor(v,v,-v,-v);
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
; 0000 0164             else  motor(0,0,0,0);
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
; 0000 0165         }
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
; 0000 0166         if(SKF>kafmid1 && out==0)
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
; 0000 0167         {
; 0000 0168             motor(-v,-v,v,v);
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
; 0000 0169             delay_ms(300);
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
; 0000 016A             out='F';
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
; 0000 016B         }
; 0000 016C         while(out=='F' && min < 800 && (imin >=  12|| imin <= 4))
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
; 0000 016D         {
; 0000 016E             sensor();
;PCODE: $0000042B VOL: 0
; 0000 016F             motor(0,0,0,0);
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
; 0000 0170         }
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
; 0000 0171     }
;PCODE: $00000437 VOL: 0
; 0000 0172 }
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
;
;void catch()
; 0000 0175 {
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
; 0000 0176     //check min
; 0000 0177     if (min < 800)
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
; 0000 0178     {
; 0000 0179         //center
; 0000 017A         if (SB < 170) motor(center);
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
; 0000 017B 
; 0000 017C         //set position
; 0000 017D         {
;PCODE: $0000044C VOL: 0
; 0000 017E             if ((lefted) && (fronted)) position = 1;
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
; 0000 017F             else if ((centered) && (fronted)) position = 2;
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
; 0000 0180             else if ((righted) && (fronted)) position = 3;
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
; 0000 0181             else if ((lefted) && (middled)) position = 4;
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
; 0000 0182             else if ((centered) && (middled)) position = 5;
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
; 0000 0183             else if ((righted) &&  (middled)) position = 6;
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
; 0000 0184             else if ((lefted) && (backed)) position = 7;
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
; 0000 0185             else if ((centered) && (backed)) position = 8;
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
; 0000 0186             else if ((righted) && (backed)) position = 9;
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
;PCODE: $000004FA VOL: 0
;PCODE: $000004FB VOL: 0
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
;PCODE: $000004FE VOL: 0
;PCODE: $000004FF VOL: 0
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
; 0000 0187         }
;PCODE: $00000502 VOL: 0
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
; 0000 0188 
; 0000 0189         //set shift
; 0000 018A         {
; 0000 018B             if (position == 1)
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
;PCODE: $0000050D VOL: 0
; 0000 018C             {
; 0000 018D                 #asm("wdr")
;PCODE: $0000050E VOL: 0
	wdr
;PCODE: $0000050F VOL: 0
; 0000 018E                 if (imin == 0) action = imin+2;
;PCODE: $00000510 VOL: 0
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
;PCODE: $00000514 VOL: 0
; 0000 018F                 else if (imin >= 13 || imin <= 3) action = imin;
;PCODE: $00000515 VOL: 0
;PCODE: $00000516 VOL: 0
;PCODE: $00000517 VOL: 0
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
; 0000 0190                 else if (imin >= 4 && imin <= 7) action = imin+2;
;PCODE: $00000521 VOL: 0
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 0
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
; 0000 0191                 else if (imin >= 8 && imin <= 12) action = imin-2;
;PCODE: $00000530 VOL: 0
;PCODE: $00000531 VOL: 0
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
;PCODE: $00000534 VOL: 0
;PCODE: $00000535 VOL: 0
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
;PCODE: $00000538 VOL: 0
;PCODE: $00000539 VOL: 0
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 0
;PCODE: $0000053C VOL: 0
;PCODE: $0000053D VOL: 0
;PCODE: $0000053E VOL: 0
; 0000 0192             }
;PCODE: $0000053F VOL: 0
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
;PCODE: $00000542 VOL: 0
; 0000 0193             else if (position == 2)
;PCODE: $00000543 VOL: 0
;PCODE: $00000544 VOL: 0
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
;PCODE: $00000547 VOL: 0
; 0000 0194             {
; 0000 0195                 #asm("wdr")
;PCODE: $00000548 VOL: 0
	wdr
;PCODE: $00000549 VOL: 0
; 0000 0196                 if (imin >= 13 || imin <= 3) action = imin;
;PCODE: $0000054A VOL: 0
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
;PCODE: $0000054F VOL: 0
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 0
;PCODE: $00000552 VOL: 0
;PCODE: $00000553 VOL: 0
; 0000 0197                 else if (imin >= 4 && imin <= 8) action = imin+2;
;PCODE: $00000554 VOL: 0
;PCODE: $00000555 VOL: 0
;PCODE: $00000556 VOL: 0
;PCODE: $00000557 VOL: 0
;PCODE: $00000558 VOL: 0
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
;PCODE: $0000055B VOL: 0
;PCODE: $0000055C VOL: 0
;PCODE: $0000055D VOL: 0
;PCODE: $0000055E VOL: 0
;PCODE: $0000055F VOL: 0
;PCODE: $00000560 VOL: 0
;PCODE: $00000561 VOL: 0
;PCODE: $00000562 VOL: 0
; 0000 0198                 else if (imin >= 9 && imin <= 12) action = imin-2;
;PCODE: $00000563 VOL: 0
;PCODE: $00000564 VOL: 0
;PCODE: $00000565 VOL: 0
;PCODE: $00000566 VOL: 0
;PCODE: $00000567 VOL: 0
;PCODE: $00000568 VOL: 0
;PCODE: $00000569 VOL: 0
;PCODE: $0000056A VOL: 0
;PCODE: $0000056B VOL: 0
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 0
;PCODE: $0000056E VOL: 0
;PCODE: $0000056F VOL: 0
;PCODE: $00000570 VOL: 0
;PCODE: $00000571 VOL: 0
; 0000 0199             }
;PCODE: $00000572 VOL: 0
;PCODE: $00000573 VOL: 0
;PCODE: $00000574 VOL: 0
; 0000 019A             else if (position == 3)
;PCODE: $00000575 VOL: 0
;PCODE: $00000576 VOL: 0
;PCODE: $00000577 VOL: 0
;PCODE: $00000578 VOL: 0
;PCODE: $00000579 VOL: 0
; 0000 019B             {
; 0000 019C                 #asm("wdr")
;PCODE: $0000057A VOL: 0
	wdr
;PCODE: $0000057B VOL: 0
; 0000 019D                 if (imin >= 13 || imin <= 3) action = imin;
;PCODE: $0000057C VOL: 0
;PCODE: $0000057D VOL: 0
;PCODE: $0000057E VOL: 0
;PCODE: $0000057F VOL: 0
;PCODE: $00000580 VOL: 0
;PCODE: $00000581 VOL: 0
;PCODE: $00000582 VOL: 0
;PCODE: $00000583 VOL: 0
;PCODE: $00000584 VOL: 0
;PCODE: $00000585 VOL: 0
; 0000 019E                 else if (imin >= 4 && imin <= 8) action = imin+2;
;PCODE: $00000586 VOL: 0
;PCODE: $00000587 VOL: 0
;PCODE: $00000588 VOL: 0
;PCODE: $00000589 VOL: 0
;PCODE: $0000058A VOL: 0
;PCODE: $0000058B VOL: 0
;PCODE: $0000058C VOL: 0
;PCODE: $0000058D VOL: 0
;PCODE: $0000058E VOL: 0
;PCODE: $0000058F VOL: 0
;PCODE: $00000590 VOL: 0
;PCODE: $00000591 VOL: 0
;PCODE: $00000592 VOL: 0
;PCODE: $00000593 VOL: 0
;PCODE: $00000594 VOL: 0
; 0000 019F                 else if (imin >= 9 && imin <= 12) action = imin-2;
;PCODE: $00000595 VOL: 0
;PCODE: $00000596 VOL: 0
;PCODE: $00000597 VOL: 0
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
;PCODE: $0000059A VOL: 0
;PCODE: $0000059B VOL: 0
;PCODE: $0000059C VOL: 0
;PCODE: $0000059D VOL: 0
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
;PCODE: $000005A1 VOL: 0
;PCODE: $000005A2 VOL: 0
;PCODE: $000005A3 VOL: 0
; 0000 01A0             }
;PCODE: $000005A4 VOL: 0
;PCODE: $000005A5 VOL: 0
;PCODE: $000005A6 VOL: 0
; 0000 01A1             else if (position == 4)
;PCODE: $000005A7 VOL: 0
;PCODE: $000005A8 VOL: 0
;PCODE: $000005A9 VOL: 0
;PCODE: $000005AA VOL: 0
;PCODE: $000005AB VOL: 0
; 0000 01A2             {
; 0000 01A3                 #asm("wdr")
;PCODE: $000005AC VOL: 0
	wdr
;PCODE: $000005AD VOL: 0
; 0000 01A4                 if (imin == 0) action = imin+1;
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
;PCODE: $000005B0 VOL: 0
;PCODE: $000005B1 VOL: 0
;PCODE: $000005B2 VOL: 0
; 0000 01A5                 else if (imin <= 2) action = imin+2;
;PCODE: $000005B3 VOL: 0
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
;PCODE: $000005B6 VOL: 0
;PCODE: $000005B7 VOL: 0
;PCODE: $000005B8 VOL: 0
;PCODE: $000005B9 VOL: 0
;PCODE: $000005BA VOL: 0
; 0000 01A6                 else if (imin >= 3 && imin <= 6) action = imin+2;
;PCODE: $000005BB VOL: 0
;PCODE: $000005BC VOL: 0
;PCODE: $000005BD VOL: 0
;PCODE: $000005BE VOL: 0
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
;PCODE: $000005C1 VOL: 0
;PCODE: $000005C2 VOL: 0
;PCODE: $000005C3 VOL: 0
;PCODE: $000005C4 VOL: 0
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
;PCODE: $000005C7 VOL: 0
;PCODE: $000005C8 VOL: 0
;PCODE: $000005C9 VOL: 0
; 0000 01A7                 else if (imin == 7) action = imin+1;
;PCODE: $000005CA VOL: 0
;PCODE: $000005CB VOL: 0
;PCODE: $000005CC VOL: 0
;PCODE: $000005CD VOL: 0
;PCODE: $000005CE VOL: 0
;PCODE: $000005CF VOL: 0
;PCODE: $000005D0 VOL: 0
;PCODE: $000005D1 VOL: 0
; 0000 01A8                 else if (imin >= 8) action = imin-1;
;PCODE: $000005D2 VOL: 0
;PCODE: $000005D3 VOL: 0
;PCODE: $000005D4 VOL: 0
;PCODE: $000005D5 VOL: 0
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
;PCODE: $000005D9 VOL: 0
; 0000 01A9             }
;PCODE: $000005DA VOL: 0
;PCODE: $000005DB VOL: 0
;PCODE: $000005DC VOL: 0
;PCODE: $000005DD VOL: 0
;PCODE: $000005DE VOL: 0
; 0000 01AA             else if (position == 5)
;PCODE: $000005DF VOL: 0
;PCODE: $000005E0 VOL: 0
;PCODE: $000005E1 VOL: 0
;PCODE: $000005E2 VOL: 0
;PCODE: $000005E3 VOL: 0
; 0000 01AB             {
; 0000 01AC                 #asm("wdr")
;PCODE: $000005E4 VOL: 0
	wdr
;PCODE: $000005E5 VOL: 0
; 0000 01AD                 if (imin >= 15 || imin <= 1) action = imin;
;PCODE: $000005E6 VOL: 0
;PCODE: $000005E7 VOL: 0
;PCODE: $000005E8 VOL: 0
;PCODE: $000005E9 VOL: 0
;PCODE: $000005EA VOL: 0
;PCODE: $000005EB VOL: 0
;PCODE: $000005EC VOL: 0
;PCODE: $000005ED VOL: 0
;PCODE: $000005EE VOL: 0
;PCODE: $000005EF VOL: 0
; 0000 01AE                 else if (imin >= 2 && imin <= 6) action = imin+2;
;PCODE: $000005F0 VOL: 0
;PCODE: $000005F1 VOL: 0
;PCODE: $000005F2 VOL: 0
;PCODE: $000005F3 VOL: 0
;PCODE: $000005F4 VOL: 0
;PCODE: $000005F5 VOL: 0
;PCODE: $000005F6 VOL: 0
;PCODE: $000005F7 VOL: 0
;PCODE: $000005F8 VOL: 0
;PCODE: $000005F9 VOL: 0
;PCODE: $000005FA VOL: 0
;PCODE: $000005FB VOL: 0
;PCODE: $000005FC VOL: 0
;PCODE: $000005FD VOL: 0
;PCODE: $000005FE VOL: 0
; 0000 01AF                 else if (imin >= 7 && imin <= 8) action = imin+1;
;PCODE: $000005FF VOL: 0
;PCODE: $00000600 VOL: 0
;PCODE: $00000601 VOL: 0
;PCODE: $00000602 VOL: 0
;PCODE: $00000603 VOL: 0
;PCODE: $00000604 VOL: 0
;PCODE: $00000605 VOL: 0
;PCODE: $00000606 VOL: 0
;PCODE: $00000607 VOL: 0
;PCODE: $00000608 VOL: 0
;PCODE: $00000609 VOL: 0
;PCODE: $0000060A VOL: 0
;PCODE: $0000060B VOL: 0
;PCODE: $0000060C VOL: 0
;PCODE: $0000060D VOL: 0
; 0000 01B0                 else if (imin == 9) action = imin-1;
;PCODE: $0000060E VOL: 0
;PCODE: $0000060F VOL: 0
;PCODE: $00000610 VOL: 0
;PCODE: $00000611 VOL: 0
;PCODE: $00000612 VOL: 0
;PCODE: $00000613 VOL: 0
;PCODE: $00000614 VOL: 0
;PCODE: $00000615 VOL: 0
; 0000 01B1                 else if (imin >= 10 && imin <= 14) action = imin-2;
;PCODE: $00000616 VOL: 0
;PCODE: $00000617 VOL: 0
;PCODE: $00000618 VOL: 0
;PCODE: $00000619 VOL: 0
;PCODE: $0000061A VOL: 0
;PCODE: $0000061B VOL: 0
;PCODE: $0000061C VOL: 0
;PCODE: $0000061D VOL: 0
;PCODE: $0000061E VOL: 0
;PCODE: $0000061F VOL: 0
;PCODE: $00000620 VOL: 0
;PCODE: $00000621 VOL: 0
;PCODE: $00000622 VOL: 0
;PCODE: $00000623 VOL: 0
;PCODE: $00000624 VOL: 0
; 0000 01B2             }
;PCODE: $00000625 VOL: 0
;PCODE: $00000626 VOL: 0
;PCODE: $00000627 VOL: 0
;PCODE: $00000628 VOL: 0
;PCODE: $00000629 VOL: 0
; 0000 01B3             else if (position == 6)
;PCODE: $0000062A VOL: 0
;PCODE: $0000062B VOL: 0
;PCODE: $0000062C VOL: 0
;PCODE: $0000062D VOL: 0
;PCODE: $0000062E VOL: 0
; 0000 01B4             {
; 0000 01B5                 #asm("wdr")
;PCODE: $0000062F VOL: 0
	wdr
;PCODE: $00000630 VOL: 0
; 0000 01B6                 if (imin == 0) action = imin-1;
;PCODE: $00000631 VOL: 0
;PCODE: $00000632 VOL: 0
;PCODE: $00000633 VOL: 0
;PCODE: $00000634 VOL: 0
;PCODE: $00000635 VOL: 0
; 0000 01B7                 else if (imin >= 14) action = imin-2;
;PCODE: $00000636 VOL: 0
;PCODE: $00000637 VOL: 0
;PCODE: $00000638 VOL: 0
;PCODE: $00000639 VOL: 0
;PCODE: $0000063A VOL: 0
;PCODE: $0000063B VOL: 0
;PCODE: $0000063C VOL: 0
;PCODE: $0000063D VOL: 0
; 0000 01B8                 else if (imin <= 13 && imin >= 10) action = imin-2;
;PCODE: $0000063E VOL: 0
;PCODE: $0000063F VOL: 0
;PCODE: $00000640 VOL: 0
;PCODE: $00000641 VOL: 0
;PCODE: $00000642 VOL: 0
;PCODE: $00000643 VOL: 0
;PCODE: $00000644 VOL: 0
;PCODE: $00000645 VOL: 0
;PCODE: $00000646 VOL: 0
;PCODE: $00000647 VOL: 0
;PCODE: $00000648 VOL: 0
;PCODE: $00000649 VOL: 0
;PCODE: $0000064A VOL: 0
;PCODE: $0000064B VOL: 0
;PCODE: $0000064C VOL: 0
; 0000 01B9                 else if (imin == 9) action = imin-1;
;PCODE: $0000064D VOL: 0
;PCODE: $0000064E VOL: 0
;PCODE: $0000064F VOL: 0
;PCODE: $00000650 VOL: 0
;PCODE: $00000651 VOL: 0
;PCODE: $00000652 VOL: 0
;PCODE: $00000653 VOL: 0
;PCODE: $00000654 VOL: 0
; 0000 01BA                 else if (imin <= 8) action = imin+1;
;PCODE: $00000655 VOL: 0
;PCODE: $00000656 VOL: 0
;PCODE: $00000657 VOL: 0
;PCODE: $00000658 VOL: 0
;PCODE: $00000659 VOL: 0
;PCODE: $0000065A VOL: 0
;PCODE: $0000065B VOL: 0
;PCODE: $0000065C VOL: 0
; 0000 01BB             }
;PCODE: $0000065D VOL: 0
;PCODE: $0000065E VOL: 0
;PCODE: $0000065F VOL: 0
;PCODE: $00000660 VOL: 0
;PCODE: $00000661 VOL: 0
; 0000 01BC             else if (position == 7)
;PCODE: $00000662 VOL: 0
;PCODE: $00000663 VOL: 0
;PCODE: $00000664 VOL: 0
;PCODE: $00000665 VOL: 0
;PCODE: $00000666 VOL: 0
; 0000 01BD             {
; 0000 01BE                 #asm("wdr")
;PCODE: $00000667 VOL: 0
	wdr
;PCODE: $00000668 VOL: 0
; 0000 01BF                 if (imin <= 3) action = imin+1;
;PCODE: $00000669 VOL: 0
;PCODE: $0000066A VOL: 0
;PCODE: $0000066B VOL: 0
;PCODE: $0000066C VOL: 0
;PCODE: $0000066D VOL: 0
;PCODE: $0000066E VOL: 0
; 0000 01C0                 else if (imin == 4) action = imin+2;
;PCODE: $0000066F VOL: 0
;PCODE: $00000670 VOL: 0
;PCODE: $00000671 VOL: 0
;PCODE: $00000672 VOL: 0
;PCODE: $00000673 VOL: 0
;PCODE: $00000674 VOL: 0
;PCODE: $00000675 VOL: 0
;PCODE: $00000676 VOL: 0
; 0000 01C1                 else if (imin >= 5 && imin <= 7) action = imin-1;
;PCODE: $00000677 VOL: 0
;PCODE: $00000678 VOL: 0
;PCODE: $00000679 VOL: 0
;PCODE: $0000067A VOL: 0
;PCODE: $0000067B VOL: 0
;PCODE: $0000067C VOL: 0
;PCODE: $0000067D VOL: 0
;PCODE: $0000067E VOL: 0
;PCODE: $0000067F VOL: 0
;PCODE: $00000680 VOL: 0
;PCODE: $00000681 VOL: 0
;PCODE: $00000682 VOL: 0
;PCODE: $00000683 VOL: 0
;PCODE: $00000684 VOL: 0
;PCODE: $00000685 VOL: 0
; 0000 01C2                 else if (imin == 8) action = imin;
;PCODE: $00000686 VOL: 0
;PCODE: $00000687 VOL: 0
;PCODE: $00000688 VOL: 0
;PCODE: $00000689 VOL: 0
;PCODE: $0000068A VOL: 0
;PCODE: $0000068B VOL: 0
;PCODE: $0000068C VOL: 0
; 0000 01C3                 else if (imin >= 9 && imin <= 11) action = imin+1;
;PCODE: $0000068D VOL: 0
;PCODE: $0000068E VOL: 0
;PCODE: $0000068F VOL: 0
;PCODE: $00000690 VOL: 0
;PCODE: $00000691 VOL: 0
;PCODE: $00000692 VOL: 0
;PCODE: $00000693 VOL: 0
;PCODE: $00000694 VOL: 0
;PCODE: $00000695 VOL: 0
;PCODE: $00000696 VOL: 0
;PCODE: $00000697 VOL: 0
;PCODE: $00000698 VOL: 0
;PCODE: $00000699 VOL: 0
;PCODE: $0000069A VOL: 0
;PCODE: $0000069B VOL: 0
; 0000 01C4                 else if (imin >= 12) action = imin-2;
;PCODE: $0000069C VOL: 0
;PCODE: $0000069D VOL: 0
;PCODE: $0000069E VOL: 0
;PCODE: $0000069F VOL: 0
;PCODE: $000006A0 VOL: 0
;PCODE: $000006A1 VOL: 0
;PCODE: $000006A2 VOL: 0
;PCODE: $000006A3 VOL: 0
; 0000 01C5             }
;PCODE: $000006A4 VOL: 0
;PCODE: $000006A5 VOL: 0
;PCODE: $000006A6 VOL: 0
;PCODE: $000006A7 VOL: 0
;PCODE: $000006A8 VOL: 0
;PCODE: $000006A9 VOL: 0
; 0000 01C6             else if (position == 8)
;PCODE: $000006AA VOL: 0
;PCODE: $000006AB VOL: 0
;PCODE: $000006AC VOL: 0
;PCODE: $000006AD VOL: 0
;PCODE: $000006AE VOL: 0
; 0000 01C7             {
; 0000 01C8                 #asm("wdr")
;PCODE: $000006AF VOL: 0
	wdr
;PCODE: $000006B0 VOL: 0
; 0000 01C9                 if (imin >= 15 || imin <= 1) action = imin;
;PCODE: $000006B1 VOL: 0
;PCODE: $000006B2 VOL: 0
;PCODE: $000006B3 VOL: 0
;PCODE: $000006B4 VOL: 0
;PCODE: $000006B5 VOL: 0
;PCODE: $000006B6 VOL: 0
;PCODE: $000006B7 VOL: 0
;PCODE: $000006B8 VOL: 0
;PCODE: $000006B9 VOL: 0
;PCODE: $000006BA VOL: 0
; 0000 01CA                 else if (imin >= 2 && imin <= 5) action = imin+2;
;PCODE: $000006BB VOL: 0
;PCODE: $000006BC VOL: 0
;PCODE: $000006BD VOL: 0
;PCODE: $000006BE VOL: 0
;PCODE: $000006BF VOL: 0
;PCODE: $000006C0 VOL: 0
;PCODE: $000006C1 VOL: 0
;PCODE: $000006C2 VOL: 0
;PCODE: $000006C3 VOL: 0
;PCODE: $000006C4 VOL: 0
;PCODE: $000006C5 VOL: 0
;PCODE: $000006C6 VOL: 0
;PCODE: $000006C7 VOL: 0
;PCODE: $000006C8 VOL: 0
;PCODE: $000006C9 VOL: 0
; 0000 01CB                 else if (imin >= 11 && imin <= 14) action = imin-2;
;PCODE: $000006CA VOL: 0
;PCODE: $000006CB VOL: 0
;PCODE: $000006CC VOL: 0
;PCODE: $000006CD VOL: 0
;PCODE: $000006CE VOL: 0
;PCODE: $000006CF VOL: 0
;PCODE: $000006D0 VOL: 0
;PCODE: $000006D1 VOL: 0
;PCODE: $000006D2 VOL: 0
;PCODE: $000006D3 VOL: 0
;PCODE: $000006D4 VOL: 0
;PCODE: $000006D5 VOL: 0
;PCODE: $000006D6 VOL: 0
;PCODE: $000006D7 VOL: 0
;PCODE: $000006D8 VOL: 0
; 0000 01CC                 else if (imin >= 6 && imin <= 10) action = 1000;
;PCODE: $000006D9 VOL: 0
;PCODE: $000006DA VOL: 0
;PCODE: $000006DB VOL: 0
;PCODE: $000006DC VOL: 0
;PCODE: $000006DD VOL: 0
;PCODE: $000006DE VOL: 0
;PCODE: $000006DF VOL: 0
;PCODE: $000006E0 VOL: 0
;PCODE: $000006E1 VOL: 0
;PCODE: $000006E2 VOL: 0
;PCODE: $000006E3 VOL: 0
;PCODE: $000006E4 VOL: 0
;PCODE: $000006E5 VOL: 0
;PCODE: $000006E6 VOL: 0
; 0000 01CD             }
;PCODE: $000006E7 VOL: 0
;PCODE: $000006E8 VOL: 0
;PCODE: $000006E9 VOL: 0
;PCODE: $000006EA VOL: 0
; 0000 01CE             else if (position == 9)
;PCODE: $000006EB VOL: 0
;PCODE: $000006EC VOL: 0
;PCODE: $000006ED VOL: 0
;PCODE: $000006EE VOL: 0
;PCODE: $000006EF VOL: 0
; 0000 01CF             {
; 0000 01D0                 #asm("wdr")
;PCODE: $000006F0 VOL: 0
	wdr
;PCODE: $000006F1 VOL: 0
; 0000 01D1                 if (imin == 0) action = 15;
;PCODE: $000006F2 VOL: 0
;PCODE: $000006F3 VOL: 0
;PCODE: $000006F4 VOL: 0
;PCODE: $000006F5 VOL: 0
; 0000 01D2                 else if (imin >= 13) action = imin-1;
;PCODE: $000006F6 VOL: 0
;PCODE: $000006F7 VOL: 0
;PCODE: $000006F8 VOL: 0
;PCODE: $000006F9 VOL: 0
;PCODE: $000006FA VOL: 0
;PCODE: $000006FB VOL: 0
;PCODE: $000006FC VOL: 0
;PCODE: $000006FD VOL: 0
; 0000 01D3                 else if (imin == 12) action = imin-2;
;PCODE: $000006FE VOL: 0
;PCODE: $000006FF VOL: 0
;PCODE: $00000700 VOL: 0
;PCODE: $00000701 VOL: 0
;PCODE: $00000702 VOL: 0
;PCODE: $00000703 VOL: 0
;PCODE: $00000704 VOL: 0
;PCODE: $00000705 VOL: 0
; 0000 01D4                 else if (imin <= 11 && imin >= 9) action = imin+1;
;PCODE: $00000706 VOL: 0
;PCODE: $00000707 VOL: 0
;PCODE: $00000708 VOL: 0
;PCODE: $00000709 VOL: 0
;PCODE: $0000070A VOL: 0
;PCODE: $0000070B VOL: 0
;PCODE: $0000070C VOL: 0
;PCODE: $0000070D VOL: 0
;PCODE: $0000070E VOL: 0
;PCODE: $0000070F VOL: 0
;PCODE: $00000710 VOL: 0
;PCODE: $00000711 VOL: 0
;PCODE: $00000712 VOL: 0
;PCODE: $00000713 VOL: 0
;PCODE: $00000714 VOL: 0
; 0000 01D5                 else if (imin == 8) action = imin;
;PCODE: $00000715 VOL: 0
;PCODE: $00000716 VOL: 0
;PCODE: $00000717 VOL: 0
;PCODE: $00000718 VOL: 0
;PCODE: $00000719 VOL: 0
;PCODE: $0000071A VOL: 0
;PCODE: $0000071B VOL: 0
; 0000 01D6                 else if (imin >= 5 && imin <= 7) action= imin-1;
;PCODE: $0000071C VOL: 0
;PCODE: $0000071D VOL: 0
;PCODE: $0000071E VOL: 0
;PCODE: $0000071F VOL: 0
;PCODE: $00000720 VOL: 0
;PCODE: $00000721 VOL: 0
;PCODE: $00000722 VOL: 0
;PCODE: $00000723 VOL: 0
;PCODE: $00000724 VOL: 0
;PCODE: $00000725 VOL: 0
;PCODE: $00000726 VOL: 0
;PCODE: $00000727 VOL: 0
;PCODE: $00000728 VOL: 0
;PCODE: $00000729 VOL: 0
;PCODE: $0000072A VOL: 0
; 0000 01D7                 else if (imin <= 4) action = imin+2;
;PCODE: $0000072B VOL: 0
;PCODE: $0000072C VOL: 0
;PCODE: $0000072D VOL: 0
;PCODE: $0000072E VOL: 0
;PCODE: $0000072F VOL: 0
;PCODE: $00000730 VOL: 0
;PCODE: $00000731 VOL: 0
;PCODE: $00000732 VOL: 0
; 0000 01D8             }
;PCODE: $00000733 VOL: 0
;PCODE: $00000734 VOL: 0
;PCODE: $00000735 VOL: 0
;PCODE: $00000736 VOL: 0
;PCODE: $00000737 VOL: 0
;PCODE: $00000738 VOL: 0
;PCODE: $00000739 VOL: 0
; 0000 01D9     }
;PCODE: $0000073A VOL: 0
;PCODE: $0000073B VOL: 0
;PCODE: $0000073C VOL: 0
;PCODE: $0000073D VOL: 0
;PCODE: $0000073E VOL: 0
;PCODE: $0000073F VOL: 0
;PCODE: $00000740 VOL: 0
;PCODE: $00000741 VOL: 0
;PCODE: $00000742 VOL: 0
; 0000 01DA 
; 0000 01DB          //command
; 0000 01DC         switch (action)
;PCODE: $00000743 VOL: 0
; 0000 01DD         {
; 0000 01DE             case 0:
;PCODE: $00000744 VOL: 0
;PCODE: $00000745 VOL: 0
; 0000 01DF                 motor(forward);
;PCODE: $00000746 VOL: 0
;PCODE: $00000747 VOL: 0
;PCODE: $00000748 VOL: 0
;PCODE: $00000749 VOL: 0
;PCODE: $0000074A VOL: 0
;PCODE: $0000074B VOL: 0
;PCODE: $0000074C VOL: 0
;PCODE: $0000074D VOL: 0
;PCODE: $0000074E VOL: 0
;PCODE: $0000074F VOL: 0
;PCODE: $00000750 VOL: 0
; 0000 01E0             break;
;PCODE: $00000751 VOL: 0
; 0000 01E1 
; 0000 01E2             case 1:
;PCODE: $00000752 VOL: 0
;PCODE: $00000753 VOL: 0
;PCODE: $00000754 VOL: 0
; 0000 01E3                 motor(v,v/2,-v,-v/2);
;PCODE: $00000755 VOL: 0
;PCODE: $00000756 VOL: 0
;PCODE: $00000757 VOL: 0
;PCODE: $00000758 VOL: 0
;PCODE: $00000759 VOL: 0
;PCODE: $0000075A VOL: 0
;PCODE: $0000075B VOL: 0
;PCODE: $0000075C VOL: 0
;PCODE: $0000075D VOL: 0
;PCODE: $0000075E VOL: 0
;PCODE: $0000075F VOL: 0
;PCODE: $00000760 VOL: 0
;PCODE: $00000761 VOL: 0
;PCODE: $00000762 VOL: 0
;PCODE: $00000763 VOL: 0
;PCODE: $00000764 VOL: 0
; 0000 01E4             break;
;PCODE: $00000765 VOL: 0
; 0000 01E5 
; 0000 01E6             case 2:
;PCODE: $00000766 VOL: 0
;PCODE: $00000767 VOL: 0
;PCODE: $00000768 VOL: 0
; 0000 01E7                 motor(v,0,-v,0);
;PCODE: $00000769 VOL: 0
;PCODE: $0000076A VOL: 0
;PCODE: $0000076B VOL: 0
;PCODE: $0000076C VOL: 0
;PCODE: $0000076D VOL: 0
;PCODE: $0000076E VOL: 0
;PCODE: $0000076F VOL: 0
;PCODE: $00000770 VOL: 0
;PCODE: $00000771 VOL: 0
;PCODE: $00000772 VOL: 0
; 0000 01E8             break;
;PCODE: $00000773 VOL: 0
; 0000 01E9 
; 0000 01EA             case 3:
;PCODE: $00000774 VOL: 0
;PCODE: $00000775 VOL: 0
;PCODE: $00000776 VOL: 0
; 0000 01EB                 motor(v,-v/2,-v,v/2);
;PCODE: $00000777 VOL: 0
;PCODE: $00000778 VOL: 0
;PCODE: $00000779 VOL: 0
;PCODE: $0000077A VOL: 0
;PCODE: $0000077B VOL: 0
;PCODE: $0000077C VOL: 0
;PCODE: $0000077D VOL: 0
;PCODE: $0000077E VOL: 0
;PCODE: $0000077F VOL: 0
;PCODE: $00000780 VOL: 0
;PCODE: $00000781 VOL: 0
;PCODE: $00000782 VOL: 0
;PCODE: $00000783 VOL: 0
;PCODE: $00000784 VOL: 0
;PCODE: $00000785 VOL: 0
;PCODE: $00000786 VOL: 0
; 0000 01EC             break;
;PCODE: $00000787 VOL: 0
; 0000 01ED 
; 0000 01EE             case 4:
;PCODE: $00000788 VOL: 0
;PCODE: $00000789 VOL: 0
;PCODE: $0000078A VOL: 0
; 0000 01EF                 motor(right);
;PCODE: $0000078B VOL: 0
;PCODE: $0000078C VOL: 0
;PCODE: $0000078D VOL: 0
;PCODE: $0000078E VOL: 0
;PCODE: $0000078F VOL: 0
;PCODE: $00000790 VOL: 0
;PCODE: $00000791 VOL: 0
;PCODE: $00000792 VOL: 0
;PCODE: $00000793 VOL: 0
;PCODE: $00000794 VOL: 0
; 0000 01F0             break;
;PCODE: $00000795 VOL: 0
; 0000 01F1 
; 0000 01F2             case 5:
;PCODE: $00000796 VOL: 0
;PCODE: $00000797 VOL: 0
;PCODE: $00000798 VOL: 0
; 0000 01F3                 motor(v/2,-v,-v/2,v);
;PCODE: $00000799 VOL: 0
;PCODE: $0000079A VOL: 0
;PCODE: $0000079B VOL: 0
;PCODE: $0000079C VOL: 0
;PCODE: $0000079D VOL: 0
;PCODE: $0000079E VOL: 0
;PCODE: $0000079F VOL: 0
;PCODE: $000007A0 VOL: 0
;PCODE: $000007A1 VOL: 0
;PCODE: $000007A2 VOL: 0
;PCODE: $000007A3 VOL: 0
;PCODE: $000007A4 VOL: 0
;PCODE: $000007A5 VOL: 0
;PCODE: $000007A6 VOL: 0
;PCODE: $000007A7 VOL: 0
; 0000 01F4             break;
;PCODE: $000007A8 VOL: 0
; 0000 01F5 
; 0000 01F6             case 6:
;PCODE: $000007A9 VOL: 0
;PCODE: $000007AA VOL: 0
;PCODE: $000007AB VOL: 0
; 0000 01F7                 motor(0,-v,0,v);
;PCODE: $000007AC VOL: 0
;PCODE: $000007AD VOL: 0
;PCODE: $000007AE VOL: 0
;PCODE: $000007AF VOL: 0
;PCODE: $000007B0 VOL: 0
;PCODE: $000007B1 VOL: 0
;PCODE: $000007B2 VOL: 0
;PCODE: $000007B3 VOL: 0
;PCODE: $000007B4 VOL: 0
; 0000 01F8             break;
;PCODE: $000007B5 VOL: 0
; 0000 01F9 
; 0000 01FA             case 7:
;PCODE: $000007B6 VOL: 0
;PCODE: $000007B7 VOL: 0
;PCODE: $000007B8 VOL: 0
; 0000 01FB                 motor(-v/2,-v,v/2,v);
;PCODE: $000007B9 VOL: 0
;PCODE: $000007BA VOL: 0
;PCODE: $000007BB VOL: 0
;PCODE: $000007BC VOL: 0
;PCODE: $000007BD VOL: 0
;PCODE: $000007BE VOL: 0
;PCODE: $000007BF VOL: 0
;PCODE: $000007C0 VOL: 0
;PCODE: $000007C1 VOL: 0
;PCODE: $000007C2 VOL: 0
;PCODE: $000007C3 VOL: 0
;PCODE: $000007C4 VOL: 0
;PCODE: $000007C5 VOL: 0
;PCODE: $000007C6 VOL: 0
; 0000 01FC             break;
;PCODE: $000007C7 VOL: 0
; 0000 01FD 
; 0000 01FE             case 8:
;PCODE: $000007C8 VOL: 0
;PCODE: $000007C9 VOL: 0
;PCODE: $000007CA VOL: 0
; 0000 01FF                 motor(back);
;PCODE: $000007CB VOL: 0
;PCODE: $000007CC VOL: 0
;PCODE: $000007CD VOL: 0
;PCODE: $000007CE VOL: 0
;PCODE: $000007CF VOL: 0
;PCODE: $000007D0 VOL: 0
;PCODE: $000007D1 VOL: 0
;PCODE: $000007D2 VOL: 0
; 0000 0200             break;
;PCODE: $000007D3 VOL: 0
; 0000 0201 
; 0000 0202             case 9:
;PCODE: $000007D4 VOL: 0
;PCODE: $000007D5 VOL: 0
;PCODE: $000007D6 VOL: 0
; 0000 0203                 motor(-v,-v/2,v,v/2);
;PCODE: $000007D7 VOL: 0
;PCODE: $000007D8 VOL: 0
;PCODE: $000007D9 VOL: 0
;PCODE: $000007DA VOL: 0
;PCODE: $000007DB VOL: 0
;PCODE: $000007DC VOL: 0
;PCODE: $000007DD VOL: 0
;PCODE: $000007DE VOL: 0
;PCODE: $000007DF VOL: 0
;PCODE: $000007E0 VOL: 0
;PCODE: $000007E1 VOL: 0
;PCODE: $000007E2 VOL: 0
;PCODE: $000007E3 VOL: 0
;PCODE: $000007E4 VOL: 0
; 0000 0204             break;
;PCODE: $000007E5 VOL: 0
; 0000 0205 
; 0000 0206             case 10:
;PCODE: $000007E6 VOL: 0
;PCODE: $000007E7 VOL: 0
;PCODE: $000007E8 VOL: 0
; 0000 0207                 motor(-v,0,v,0);
;PCODE: $000007E9 VOL: 0
;PCODE: $000007EA VOL: 0
;PCODE: $000007EB VOL: 0
;PCODE: $000007EC VOL: 0
;PCODE: $000007ED VOL: 0
;PCODE: $000007EE VOL: 0
;PCODE: $000007EF VOL: 0
;PCODE: $000007F0 VOL: 0
;PCODE: $000007F1 VOL: 0
;PCODE: $000007F2 VOL: 0
; 0000 0208             break;
;PCODE: $000007F3 VOL: 0
; 0000 0209 
; 0000 020A             case 11:
;PCODE: $000007F4 VOL: 0
;PCODE: $000007F5 VOL: 0
;PCODE: $000007F6 VOL: 0
; 0000 020B                 motor(-v,v/2,v,-v/2);
;PCODE: $000007F7 VOL: 0
;PCODE: $000007F8 VOL: 0
;PCODE: $000007F9 VOL: 0
;PCODE: $000007FA VOL: 0
;PCODE: $000007FB VOL: 0
;PCODE: $000007FC VOL: 0
;PCODE: $000007FD VOL: 0
;PCODE: $000007FE VOL: 0
;PCODE: $000007FF VOL: 0
;PCODE: $00000800 VOL: 0
;PCODE: $00000801 VOL: 0
;PCODE: $00000802 VOL: 0
;PCODE: $00000803 VOL: 0
;PCODE: $00000804 VOL: 0
;PCODE: $00000805 VOL: 0
;PCODE: $00000806 VOL: 0
; 0000 020C             break;
;PCODE: $00000807 VOL: 0
; 0000 020D 
; 0000 020E             case 12:
;PCODE: $00000808 VOL: 0
;PCODE: $00000809 VOL: 0
;PCODE: $0000080A VOL: 0
; 0000 020F                 motor(left);
;PCODE: $0000080B VOL: 0
;PCODE: $0000080C VOL: 0
;PCODE: $0000080D VOL: 0
;PCODE: $0000080E VOL: 0
;PCODE: $0000080F VOL: 0
;PCODE: $00000810 VOL: 0
;PCODE: $00000811 VOL: 0
;PCODE: $00000812 VOL: 0
;PCODE: $00000813 VOL: 0
;PCODE: $00000814 VOL: 0
;PCODE: $00000815 VOL: 0
; 0000 0210             break;
;PCODE: $00000816 VOL: 0
; 0000 0211 
; 0000 0212             case 13:
;PCODE: $00000817 VOL: 0
;PCODE: $00000818 VOL: 0
;PCODE: $00000819 VOL: 0
; 0000 0213                 motor(-v/2,v,v/2,-v);
;PCODE: $0000081A VOL: 0
;PCODE: $0000081B VOL: 0
;PCODE: $0000081C VOL: 0
;PCODE: $0000081D VOL: 0
;PCODE: $0000081E VOL: 0
;PCODE: $0000081F VOL: 0
;PCODE: $00000820 VOL: 0
;PCODE: $00000821 VOL: 0
;PCODE: $00000822 VOL: 0
;PCODE: $00000823 VOL: 0
;PCODE: $00000824 VOL: 0
;PCODE: $00000825 VOL: 0
;PCODE: $00000826 VOL: 0
;PCODE: $00000827 VOL: 0
;PCODE: $00000828 VOL: 0
;PCODE: $00000829 VOL: 0
; 0000 0214             break;
;PCODE: $0000082A VOL: 0
; 0000 0215 
; 0000 0216             case 14:
;PCODE: $0000082B VOL: 0
;PCODE: $0000082C VOL: 0
;PCODE: $0000082D VOL: 0
; 0000 0217                 motor(0,v,0,-v);
;PCODE: $0000082E VOL: 0
;PCODE: $0000082F VOL: 0
;PCODE: $00000830 VOL: 0
;PCODE: $00000831 VOL: 0
;PCODE: $00000832 VOL: 0
;PCODE: $00000833 VOL: 0
;PCODE: $00000834 VOL: 0
;PCODE: $00000835 VOL: 0
;PCODE: $00000836 VOL: 0
;PCODE: $00000837 VOL: 0
; 0000 0218             break;
;PCODE: $00000838 VOL: 0
; 0000 0219 
; 0000 021A             case 15:
;PCODE: $00000839 VOL: 0
;PCODE: $0000083A VOL: 0
;PCODE: $0000083B VOL: 0
; 0000 021B                 motor(v/2,v,-v/2,-v);
;PCODE: $0000083C VOL: 0
;PCODE: $0000083D VOL: 0
;PCODE: $0000083E VOL: 0
;PCODE: $0000083F VOL: 0
;PCODE: $00000840 VOL: 0
;PCODE: $00000841 VOL: 0
;PCODE: $00000842 VOL: 0
;PCODE: $00000843 VOL: 0
;PCODE: $00000844 VOL: 0
;PCODE: $00000845 VOL: 0
;PCODE: $00000846 VOL: 0
;PCODE: $00000847 VOL: 0
;PCODE: $00000848 VOL: 0
;PCODE: $00000849 VOL: 0
;PCODE: $0000084A VOL: 0
;PCODE: $0000084B VOL: 0
; 0000 021C             break;
;PCODE: $0000084C VOL: 0
; 0000 021D 
; 0000 021E             case 1000:
;PCODE: $0000084D VOL: 0
;PCODE: $0000084E VOL: 0
;PCODE: $0000084F VOL: 0
; 0000 021F                 motor(0,0,0,0);
;PCODE: $00000850 VOL: 0
;PCODE: $00000851 VOL: 0
;PCODE: $00000852 VOL: 0
;PCODE: $00000853 VOL: 0
;PCODE: $00000854 VOL: 0
;PCODE: $00000855 VOL: 0
;PCODE: $00000856 VOL: 0
;PCODE: $00000857 VOL: 0
;PCODE: $00000858 VOL: 0
; 0000 0220             break;
;PCODE: $00000859 VOL: 0
; 0000 0221 
; 0000 0222             default:
;PCODE: $0000085A VOL: 0
; 0000 0223             break;
;PCODE: $0000085B VOL: 0
; 0000 0224         }
;PCODE: $0000085C VOL: 0
; 0000 0225     }
; 0000 0226 
; 0000 0227     else
;PCODE: $0000085D VOL: 0
;PCODE: $0000085E VOL: 0
; 0000 0228     {
; 0000 0229         if (SB < backmax1-50) motor(-v+k,-v-k,v-k,v+k);
;PCODE: $0000085F VOL: 0
;PCODE: $00000860 VOL: 0
;PCODE: $00000861 VOL: 0
;PCODE: $00000862 VOL: 0
;PCODE: $00000863 VOL: 0
;PCODE: $00000864 VOL: 0
;PCODE: $00000865 VOL: 0
;PCODE: $00000866 VOL: 0
;PCODE: $00000867 VOL: 0
;PCODE: $00000868 VOL: 0
;PCODE: $00000869 VOL: 0
;PCODE: $0000086A VOL: 0
;PCODE: $0000086B VOL: 0
;PCODE: $0000086C VOL: 0
;PCODE: $0000086D VOL: 0
;PCODE: $0000086E VOL: 0
;PCODE: $0000086F VOL: 0
;PCODE: $00000870 VOL: 0
;PCODE: $00000871 VOL: 0
;PCODE: $00000872 VOL: 0
;PCODE: $00000873 VOL: 0
;PCODE: $00000874 VOL: 0
;PCODE: $00000875 VOL: 0
; 0000 022A         else if (SB > backmax1+150) motor(v+k,v-k,-v-k,-v+k);
;PCODE: $00000876 VOL: 0
;PCODE: $00000877 VOL: 0
;PCODE: $00000878 VOL: 0
;PCODE: $00000879 VOL: 0
;PCODE: $0000087A VOL: 0
;PCODE: $0000087B VOL: 0
;PCODE: $0000087C VOL: 0
;PCODE: $0000087D VOL: 0
;PCODE: $0000087E VOL: 0
;PCODE: $0000087F VOL: 0
;PCODE: $00000880 VOL: 0
;PCODE: $00000881 VOL: 0
;PCODE: $00000882 VOL: 0
;PCODE: $00000883 VOL: 0
;PCODE: $00000884 VOL: 0
;PCODE: $00000885 VOL: 0
;PCODE: $00000886 VOL: 0
;PCODE: $00000887 VOL: 0
;PCODE: $00000888 VOL: 0
;PCODE: $00000889 VOL: 0
;PCODE: $0000088A VOL: 0
;PCODE: $0000088B VOL: 0
;PCODE: $0000088C VOL: 0
;PCODE: $0000088D VOL: 0
;PCODE: $0000088E VOL: 0
;PCODE: $0000088F VOL: 0
; 0000 022B         else if (k < -20 || k > 20) motor(center);
;PCODE: $00000890 VOL: 0
;PCODE: $00000891 VOL: 0
;PCODE: $00000892 VOL: 0
;PCODE: $00000893 VOL: 0
;PCODE: $00000894 VOL: 0
;PCODE: $00000895 VOL: 0
;PCODE: $00000896 VOL: 0
;PCODE: $00000897 VOL: 0
;PCODE: $00000898 VOL: 0
;PCODE: $00000899 VOL: 0
;PCODE: $0000089A VOL: 0
;PCODE: $0000089B VOL: 0
;PCODE: $0000089C VOL: 0
;PCODE: $0000089D VOL: 0
;PCODE: $0000089E VOL: 0
;PCODE: $0000089F VOL: 0
;PCODE: $000008A0 VOL: 0
;PCODE: $000008A1 VOL: 0
;PCODE: $000008A2 VOL: 0
;PCODE: $000008A3 VOL: 0
; 0000 022C         else motor(0,0,0,0);
;PCODE: $000008A4 VOL: 0
;PCODE: $000008A5 VOL: 0
;PCODE: $000008A6 VOL: 0
;PCODE: $000008A7 VOL: 0
;PCODE: $000008A8 VOL: 0
;PCODE: $000008A9 VOL: 0
;PCODE: $000008AA VOL: 0
;PCODE: $000008AB VOL: 0
;PCODE: $000008AC VOL: 0
;PCODE: $000008AD VOL: 0
;PCODE: $000008AE VOL: 0
; 0000 022D     }
;PCODE: $000008AF VOL: 0
;PCODE: $000008B0 VOL: 0
;PCODE: $000008B1 VOL: 0
;PCODE: $000008B2 VOL: 0
; 0000 022E }
;PCODE: $000008B3 VOL: 0
;PCODE: $000008B4 VOL: 0
;
;void setup()
; 0000 0231 {
;PCODE: $000008B5 VOL: 0
;PCODE: $000008B6 VOL: 0
; 0000 0232     old_print_lcd = print_lcd;
;PCODE: $000008B7 VOL: 0
;PCODE: $000008B8 VOL: 0
; 0000 0233     print_lcd = 0;
;PCODE: $000008B9 VOL: 0
;PCODE: $000008BA VOL: 0
; 0000 0234     setcmp = false;
;PCODE: $000008BB VOL: 0
;PCODE: $000008BC VOL: 0
; 0000 0235     setkaf1 = false;
;PCODE: $000008BD VOL: 0
;PCODE: $000008BE VOL: 0
; 0000 0236     setkaf2 = false;
;PCODE: $000008BF VOL: 0
;PCODE: $000008C0 VOL: 0
; 0000 0237     setkaf3 = false;
;PCODE: $000008C1 VOL: 0
;PCODE: $000008C2 VOL: 0
; 0000 0238     setkaf4 = false;
;PCODE: $000008C3 VOL: 0
;PCODE: $000008C4 VOL: 0
; 0000 0239     setzamin1 = false;
;PCODE: $000008C5 VOL: 0
;PCODE: $000008C6 VOL: 0
; 0000 023A     setzamin2 = false;
;PCODE: $000008C7 VOL: 0
;PCODE: $000008C8 VOL: 0
; 0000 023B     setzamin3 = false;
;PCODE: $000008C9 VOL: 0
;PCODE: $000008CA VOL: 0
; 0000 023C     setzamin4 = false;
;PCODE: $000008CB VOL: 0
;PCODE: $000008CC VOL: 0
; 0000 023D     setback1 = false;
;PCODE: $000008CD VOL: 0
;PCODE: $000008CE VOL: 0
; 0000 023E     setback2 = false;
;PCODE: $000008CF VOL: 0
;PCODE: $000008D0 VOL: 0
; 0000 023F     setback3 = false;
;PCODE: $000008D1 VOL: 0
;PCODE: $000008D2 VOL: 0
; 0000 0240     lcd_clear();
;PCODE: $000008D3 VOL: 0
; 0000 0241     lcd_gotoxy(0,0);
;PCODE: $000008D4 VOL: 0
;PCODE: $000008D5 VOL: 0
;PCODE: $000008D6 VOL: 0
;PCODE: $000008D7 VOL: 0
; 0000 0242     lcd_putsf("setup start...");
;PCODE: $000008D8 VOL: 0
;PCODE: $000008D9 VOL: 0
;PCODE: $000008DA VOL: 0
; 0000 0243     delay_ms(1000);
;PCODE: $000008DB VOL: 0
;PCODE: $000008DC VOL: 0
; 0000 0244     while (setcmp == false)
;PCODE: $000008DD VOL: 0
;PCODE: $000008DE VOL: 0
;PCODE: $000008DF VOL: 0
;PCODE: $000008E0 VOL: 0
; 0000 0245     {
; 0000 0246         #asm("wdr")
;PCODE: $000008E1 VOL: 0
	wdr
;PCODE: $000008E2 VOL: 0
; 0000 0247         sensor();
;PCODE: $000008E3 VOL: 0
; 0000 0248         lcd_clear();
;PCODE: $000008E4 VOL: 0
; 0000 0249         lcd_gotoxy(0,0);
;PCODE: $000008E5 VOL: 0
;PCODE: $000008E6 VOL: 0
;PCODE: $000008E7 VOL: 0
;PCODE: $000008E8 VOL: 0
; 0000 024A         lcd_putsf("set cmp: ");
;PCODE: $000008E9 VOL: 0
;PCODE: $000008EA VOL: 0
;PCODE: $000008EB VOL: 0
; 0000 024B         lcd_putchar((compass_read(1)/100)%10 + '0');
;PCODE: $000008EC VOL: 0
;PCODE: $000008ED VOL: 0
;PCODE: $000008EE VOL: 0
;PCODE: $000008EF VOL: 0
;PCODE: $000008F0 VOL: 0
;PCODE: $000008F1 VOL: 0
;PCODE: $000008F2 VOL: 0
;PCODE: $000008F3 VOL: 0
;PCODE: $000008F4 VOL: 0
;PCODE: $000008F5 VOL: 0
;PCODE: $000008F6 VOL: 0
;PCODE: $000008F7 VOL: 0
; 0000 024C         lcd_putchar((compass_read(1)/10)%10 + '0');
;PCODE: $000008F8 VOL: 0
;PCODE: $000008F9 VOL: 0
;PCODE: $000008FA VOL: 0
;PCODE: $000008FB VOL: 0
;PCODE: $000008FC VOL: 0
;PCODE: $000008FD VOL: 0
;PCODE: $000008FE VOL: 0
;PCODE: $000008FF VOL: 0
;PCODE: $00000900 VOL: 0
;PCODE: $00000901 VOL: 0
;PCODE: $00000902 VOL: 0
;PCODE: $00000903 VOL: 0
; 0000 024D         lcd_putchar((compass_read(1)/1)%10 + '0');
;PCODE: $00000904 VOL: 0
;PCODE: $00000905 VOL: 0
;PCODE: $00000906 VOL: 0
;PCODE: $00000907 VOL: 0
;PCODE: $00000908 VOL: 0
;PCODE: $00000909 VOL: 0
;PCODE: $0000090A VOL: 0
;PCODE: $0000090B VOL: 0
;PCODE: $0000090C VOL: 0
; 0000 024E         if (PINC.3 == 1)
;PCODE: $0000090D VOL: 0
;PCODE: $0000090E VOL: 0
;PCODE: $0000090F VOL: 0
; 0000 024F         {
; 0000 0250             c = compass_read(1);
;PCODE: $00000910 VOL: 0
;PCODE: $00000911 VOL: 0
;PCODE: $00000912 VOL: 0
;PCODE: $00000913 VOL: 0
;PCODE: $00000914 VOL: 0
; 0000 0251             lcd_clear();
;PCODE: $00000915 VOL: 0
; 0000 0252             lcd_gotoxy(0,0);
;PCODE: $00000916 VOL: 0
;PCODE: $00000917 VOL: 0
;PCODE: $00000918 VOL: 0
;PCODE: $00000919 VOL: 0
; 0000 0253             lcd_putsf("cmp set");
;PCODE: $0000091A VOL: 0
;PCODE: $0000091B VOL: 0
;PCODE: $0000091C VOL: 0
; 0000 0254             delay_ms(1000);
;PCODE: $0000091D VOL: 0
;PCODE: $0000091E VOL: 0
; 0000 0255             setcmp = true;
;PCODE: $0000091F VOL: 0
;PCODE: $00000920 VOL: 0
; 0000 0256         }
; 0000 0257     }
;PCODE: $00000921 VOL: 0
;PCODE: $00000922 VOL: 0
;PCODE: $00000923 VOL: 0
; 0000 0258     while (setkaf1 == false)
;PCODE: $00000924 VOL: 0
;PCODE: $00000925 VOL: 0
;PCODE: $00000926 VOL: 0
;PCODE: $00000927 VOL: 0
; 0000 0259     {
; 0000 025A         #asm("wdr")
;PCODE: $00000928 VOL: 0
	wdr
;PCODE: $00000929 VOL: 0
; 0000 025B         sensor();
;PCODE: $0000092A VOL: 0
; 0000 025C         lcd_clear();
;PCODE: $0000092B VOL: 0
; 0000 025D         lcd_gotoxy(0,0);
;PCODE: $0000092C VOL: 0
;PCODE: $0000092D VOL: 0
;PCODE: $0000092E VOL: 0
;PCODE: $0000092F VOL: 0
; 0000 025E         lcd_putsf("set SKF: ");
;PCODE: $00000930 VOL: 0
;PCODE: $00000931 VOL: 0
;PCODE: $00000932 VOL: 0
; 0000 025F         lcd_putchar((SKF/100)%10 + '0');
;PCODE: $00000933 VOL: 0
;PCODE: $00000934 VOL: 0
;PCODE: $00000935 VOL: 0
;PCODE: $00000936 VOL: 0
;PCODE: $00000937 VOL: 0
;PCODE: $00000938 VOL: 0
;PCODE: $00000939 VOL: 0
;PCODE: $0000093A VOL: 0
;PCODE: $0000093B VOL: 0
; 0000 0260         lcd_putchar((SKF/10)%10 + '0');
;PCODE: $0000093C VOL: 0
;PCODE: $0000093D VOL: 0
;PCODE: $0000093E VOL: 0
;PCODE: $0000093F VOL: 0
;PCODE: $00000940 VOL: 0
;PCODE: $00000941 VOL: 0
;PCODE: $00000942 VOL: 0
;PCODE: $00000943 VOL: 0
;PCODE: $00000944 VOL: 0
; 0000 0261         lcd_putchar((SKF/1)%10 + '0');
;PCODE: $00000945 VOL: 0
;PCODE: $00000946 VOL: 0
;PCODE: $00000947 VOL: 0
;PCODE: $00000948 VOL: 0
;PCODE: $00000949 VOL: 0
;PCODE: $0000094A VOL: 0
; 0000 0262         if (PINC.3 == 1)
;PCODE: $0000094B VOL: 0
;PCODE: $0000094C VOL: 0
;PCODE: $0000094D VOL: 0
; 0000 0263         {
; 0000 0264             kafmax1 = SKF;
;PCODE: $0000094E VOL: 0
;PCODE: $0000094F VOL: 0
;PCODE: $00000950 VOL: 0
; 0000 0265             lcd_clear();
;PCODE: $00000951 VOL: 0
; 0000 0266             lcd_gotoxy(0,0);
;PCODE: $00000952 VOL: 0
;PCODE: $00000953 VOL: 0
;PCODE: $00000954 VOL: 0
;PCODE: $00000955 VOL: 0
; 0000 0267             lcd_putsf("SKF set");
;PCODE: $00000956 VOL: 0
;PCODE: $00000957 VOL: 0
;PCODE: $00000958 VOL: 0
; 0000 0268             delay_ms(1000);
;PCODE: $00000959 VOL: 0
;PCODE: $0000095A VOL: 0
; 0000 0269             setkaf1 = true;
;PCODE: $0000095B VOL: 0
;PCODE: $0000095C VOL: 0
; 0000 026A         }
; 0000 026B 
; 0000 026C     }
;PCODE: $0000095D VOL: 0
;PCODE: $0000095E VOL: 0
;PCODE: $0000095F VOL: 0
; 0000 026D     while (setkaf2 == false)
;PCODE: $00000960 VOL: 0
;PCODE: $00000961 VOL: 0
;PCODE: $00000962 VOL: 0
;PCODE: $00000963 VOL: 0
; 0000 026E     {
; 0000 026F         #asm("wdr")
;PCODE: $00000964 VOL: 0
	wdr
;PCODE: $00000965 VOL: 0
; 0000 0270         sensor();
;PCODE: $00000966 VOL: 0
; 0000 0271         lcd_clear();
;PCODE: $00000967 VOL: 0
; 0000 0272         lcd_gotoxy(0,0);
;PCODE: $00000968 VOL: 0
;PCODE: $00000969 VOL: 0
;PCODE: $0000096A VOL: 0
;PCODE: $0000096B VOL: 0
; 0000 0273         lcd_putsf("set SKR: ");
;PCODE: $0000096C VOL: 0
;PCODE: $0000096D VOL: 0
;PCODE: $0000096E VOL: 0
; 0000 0274         lcd_putchar((SKR/100)%10 + '0');
;PCODE: $0000096F VOL: 0
;PCODE: $00000970 VOL: 0
;PCODE: $00000971 VOL: 0
;PCODE: $00000972 VOL: 0
;PCODE: $00000973 VOL: 0
;PCODE: $00000974 VOL: 0
;PCODE: $00000975 VOL: 0
;PCODE: $00000976 VOL: 0
;PCODE: $00000977 VOL: 0
; 0000 0275         lcd_putchar((SKR/10)%10 + '0');
;PCODE: $00000978 VOL: 0
;PCODE: $00000979 VOL: 0
;PCODE: $0000097A VOL: 0
;PCODE: $0000097B VOL: 0
;PCODE: $0000097C VOL: 0
;PCODE: $0000097D VOL: 0
;PCODE: $0000097E VOL: 0
;PCODE: $0000097F VOL: 0
;PCODE: $00000980 VOL: 0
; 0000 0276         lcd_putchar((SKR/1)%10 + '0');
;PCODE: $00000981 VOL: 0
;PCODE: $00000982 VOL: 0
;PCODE: $00000983 VOL: 0
;PCODE: $00000984 VOL: 0
;PCODE: $00000985 VOL: 0
;PCODE: $00000986 VOL: 0
; 0000 0277         if (PINC.3 == 1)
;PCODE: $00000987 VOL: 0
;PCODE: $00000988 VOL: 0
;PCODE: $00000989 VOL: 0
; 0000 0278         {
; 0000 0279             kafmax2 = SKR;
;PCODE: $0000098A VOL: 0
;PCODE: $0000098B VOL: 0
;PCODE: $0000098C VOL: 0
; 0000 027A             lcd_clear();
;PCODE: $0000098D VOL: 0
; 0000 027B             lcd_gotoxy(0,0);
;PCODE: $0000098E VOL: 0
;PCODE: $0000098F VOL: 0
;PCODE: $00000990 VOL: 0
;PCODE: $00000991 VOL: 0
; 0000 027C             lcd_putsf("SKR set");
;PCODE: $00000992 VOL: 0
;PCODE: $00000993 VOL: 0
;PCODE: $00000994 VOL: 0
; 0000 027D             delay_ms(1000);
;PCODE: $00000995 VOL: 0
;PCODE: $00000996 VOL: 0
; 0000 027E             setkaf2 = true;
;PCODE: $00000997 VOL: 0
;PCODE: $00000998 VOL: 0
; 0000 027F         }
; 0000 0280 
; 0000 0281     }
;PCODE: $00000999 VOL: 0
;PCODE: $0000099A VOL: 0
;PCODE: $0000099B VOL: 0
; 0000 0282     while (setkaf3 == false)
;PCODE: $0000099C VOL: 0
;PCODE: $0000099D VOL: 0
;PCODE: $0000099E VOL: 0
;PCODE: $0000099F VOL: 0
; 0000 0283     {
; 0000 0284         #asm("wdr")
;PCODE: $000009A0 VOL: 0
	wdr
;PCODE: $000009A1 VOL: 0
; 0000 0285         sensor();
;PCODE: $000009A2 VOL: 0
; 0000 0286         lcd_clear();
;PCODE: $000009A3 VOL: 0
; 0000 0287         lcd_gotoxy(0,0);
;PCODE: $000009A4 VOL: 0
;PCODE: $000009A5 VOL: 0
;PCODE: $000009A6 VOL: 0
;PCODE: $000009A7 VOL: 0
; 0000 0288         lcd_putsf("set SKB: ");
;PCODE: $000009A8 VOL: 0
;PCODE: $000009A9 VOL: 0
;PCODE: $000009AA VOL: 0
; 0000 0289         lcd_putchar((SKB/100)%10 + '0');
;PCODE: $000009AB VOL: 0
;PCODE: $000009AC VOL: 0
;PCODE: $000009AD VOL: 0
;PCODE: $000009AE VOL: 0
;PCODE: $000009AF VOL: 0
;PCODE: $000009B0 VOL: 0
;PCODE: $000009B1 VOL: 0
;PCODE: $000009B2 VOL: 0
;PCODE: $000009B3 VOL: 0
; 0000 028A         lcd_putchar((SKB/10)%10 + '0');
;PCODE: $000009B4 VOL: 0
;PCODE: $000009B5 VOL: 0
;PCODE: $000009B6 VOL: 0
;PCODE: $000009B7 VOL: 0
;PCODE: $000009B8 VOL: 0
;PCODE: $000009B9 VOL: 0
;PCODE: $000009BA VOL: 0
;PCODE: $000009BB VOL: 0
;PCODE: $000009BC VOL: 0
; 0000 028B         lcd_putchar((SKB/1)%10 + '0');
;PCODE: $000009BD VOL: 0
;PCODE: $000009BE VOL: 0
;PCODE: $000009BF VOL: 0
;PCODE: $000009C0 VOL: 0
;PCODE: $000009C1 VOL: 0
;PCODE: $000009C2 VOL: 0
; 0000 028C         if (PINC.3 == 1)
;PCODE: $000009C3 VOL: 0
;PCODE: $000009C4 VOL: 0
;PCODE: $000009C5 VOL: 0
; 0000 028D         {
; 0000 028E             kafmax3 = SKB;
;PCODE: $000009C6 VOL: 0
;PCODE: $000009C7 VOL: 0
;PCODE: $000009C8 VOL: 0
; 0000 028F             lcd_clear();
;PCODE: $000009C9 VOL: 0
; 0000 0290             lcd_gotoxy(0,0);
;PCODE: $000009CA VOL: 0
;PCODE: $000009CB VOL: 0
;PCODE: $000009CC VOL: 0
;PCODE: $000009CD VOL: 0
; 0000 0291             lcd_putsf("SKB set");
;PCODE: $000009CE VOL: 0
;PCODE: $000009CF VOL: 0
;PCODE: $000009D0 VOL: 0
; 0000 0292             delay_ms(1000);
;PCODE: $000009D1 VOL: 0
;PCODE: $000009D2 VOL: 0
; 0000 0293             setkaf3 = true;
;PCODE: $000009D3 VOL: 0
;PCODE: $000009D4 VOL: 0
; 0000 0294         }
; 0000 0295 
; 0000 0296     }
;PCODE: $000009D5 VOL: 0
;PCODE: $000009D6 VOL: 0
;PCODE: $000009D7 VOL: 0
; 0000 0297     while (setkaf4 == false)
;PCODE: $000009D8 VOL: 0
;PCODE: $000009D9 VOL: 0
;PCODE: $000009DA VOL: 0
;PCODE: $000009DB VOL: 0
; 0000 0298     {
; 0000 0299         #asm("wdr")
;PCODE: $000009DC VOL: 0
	wdr
;PCODE: $000009DD VOL: 0
; 0000 029A         sensor();
;PCODE: $000009DE VOL: 0
; 0000 029B         lcd_clear();
;PCODE: $000009DF VOL: 0
; 0000 029C         lcd_gotoxy(0,0);
;PCODE: $000009E0 VOL: 0
;PCODE: $000009E1 VOL: 0
;PCODE: $000009E2 VOL: 0
;PCODE: $000009E3 VOL: 0
; 0000 029D         lcd_putsf("set SKL: ");
;PCODE: $000009E4 VOL: 0
;PCODE: $000009E5 VOL: 0
;PCODE: $000009E6 VOL: 0
; 0000 029E         lcd_putchar((SKL/100)%10 + '0');
;PCODE: $000009E7 VOL: 0
;PCODE: $000009E8 VOL: 0
;PCODE: $000009E9 VOL: 0
;PCODE: $000009EA VOL: 0
;PCODE: $000009EB VOL: 0
;PCODE: $000009EC VOL: 0
;PCODE: $000009ED VOL: 0
;PCODE: $000009EE VOL: 0
;PCODE: $000009EF VOL: 0
; 0000 029F         lcd_putchar((SKL/10)%10 + '0');
;PCODE: $000009F0 VOL: 0
;PCODE: $000009F1 VOL: 0
;PCODE: $000009F2 VOL: 0
;PCODE: $000009F3 VOL: 0
;PCODE: $000009F4 VOL: 0
;PCODE: $000009F5 VOL: 0
;PCODE: $000009F6 VOL: 0
;PCODE: $000009F7 VOL: 0
;PCODE: $000009F8 VOL: 0
; 0000 02A0         lcd_putchar((SKL/1)%10 + '0');
;PCODE: $000009F9 VOL: 0
;PCODE: $000009FA VOL: 0
;PCODE: $000009FB VOL: 0
;PCODE: $000009FC VOL: 0
;PCODE: $000009FD VOL: 0
;PCODE: $000009FE VOL: 0
; 0000 02A1         if (PINC.3 == 1)
;PCODE: $000009FF VOL: 0
;PCODE: $00000A00 VOL: 0
;PCODE: $00000A01 VOL: 0
; 0000 02A2         {
; 0000 02A3             kafmax4 = SKL;
;PCODE: $00000A02 VOL: 0
;PCODE: $00000A03 VOL: 0
;PCODE: $00000A04 VOL: 0
; 0000 02A4             lcd_clear();
;PCODE: $00000A05 VOL: 0
; 0000 02A5             lcd_gotoxy(0,0);
;PCODE: $00000A06 VOL: 0
;PCODE: $00000A07 VOL: 0
;PCODE: $00000A08 VOL: 0
;PCODE: $00000A09 VOL: 0
; 0000 02A6             lcd_putsf("SKL set");
;PCODE: $00000A0A VOL: 0
;PCODE: $00000A0B VOL: 0
;PCODE: $00000A0C VOL: 0
; 0000 02A7             delay_ms(1000);
;PCODE: $00000A0D VOL: 0
;PCODE: $00000A0E VOL: 0
; 0000 02A8             setkaf4 = true;
;PCODE: $00000A0F VOL: 0
;PCODE: $00000A10 VOL: 0
; 0000 02A9         }
; 0000 02AA 
; 0000 02AB     }
;PCODE: $00000A11 VOL: 0
;PCODE: $00000A12 VOL: 0
;PCODE: $00000A13 VOL: 0
; 0000 02AC     while (setzamin1 == false)
;PCODE: $00000A14 VOL: 0
;PCODE: $00000A15 VOL: 0
;PCODE: $00000A16 VOL: 0
;PCODE: $00000A17 VOL: 0
; 0000 02AD     {
; 0000 02AE         #asm("wdr")
;PCODE: $00000A18 VOL: 0
	wdr
;PCODE: $00000A19 VOL: 0
; 0000 02AF         sensor();
;PCODE: $00000A1A VOL: 0
; 0000 02B0         lcd_clear();
;PCODE: $00000A1B VOL: 0
; 0000 02B1         lcd_gotoxy(0,0);
;PCODE: $00000A1C VOL: 0
;PCODE: $00000A1D VOL: 0
;PCODE: $00000A1E VOL: 0
;PCODE: $00000A1F VOL: 0
; 0000 02B2         lcd_putsf("set zaminF: ");
;PCODE: $00000A20 VOL: 0
;PCODE: $00000A21 VOL: 0
;PCODE: $00000A22 VOL: 0
; 0000 02B3         lcd_putchar((SKF/100)%10 + '0');
;PCODE: $00000A23 VOL: 0
;PCODE: $00000A24 VOL: 0
;PCODE: $00000A25 VOL: 0
;PCODE: $00000A26 VOL: 0
;PCODE: $00000A27 VOL: 0
;PCODE: $00000A28 VOL: 0
;PCODE: $00000A29 VOL: 0
;PCODE: $00000A2A VOL: 0
;PCODE: $00000A2B VOL: 0
; 0000 02B4         lcd_putchar((SKF/10)%10 + '0');
;PCODE: $00000A2C VOL: 0
;PCODE: $00000A2D VOL: 0
;PCODE: $00000A2E VOL: 0
;PCODE: $00000A2F VOL: 0
;PCODE: $00000A30 VOL: 0
;PCODE: $00000A31 VOL: 0
;PCODE: $00000A32 VOL: 0
;PCODE: $00000A33 VOL: 0
;PCODE: $00000A34 VOL: 0
; 0000 02B5         lcd_putchar((SKF/1)%10 + '0');
;PCODE: $00000A35 VOL: 0
;PCODE: $00000A36 VOL: 0
;PCODE: $00000A37 VOL: 0
;PCODE: $00000A38 VOL: 0
;PCODE: $00000A39 VOL: 0
;PCODE: $00000A3A VOL: 0
; 0000 02B6         if (PINC.3 == 1)
;PCODE: $00000A3B VOL: 0
;PCODE: $00000A3C VOL: 0
;PCODE: $00000A3D VOL: 0
; 0000 02B7         {
; 0000 02B8             kafmin1 = SKF;
;PCODE: $00000A3E VOL: 0
;PCODE: $00000A3F VOL: 0
;PCODE: $00000A40 VOL: 0
; 0000 02B9             lcd_clear();
;PCODE: $00000A41 VOL: 0
; 0000 02BA             lcd_gotoxy(0,0);
;PCODE: $00000A42 VOL: 0
;PCODE: $00000A43 VOL: 0
;PCODE: $00000A44 VOL: 0
;PCODE: $00000A45 VOL: 0
; 0000 02BB             lcd_putsf("zaminF set");
;PCODE: $00000A46 VOL: 0
;PCODE: $00000A47 VOL: 0
;PCODE: $00000A48 VOL: 0
; 0000 02BC             delay_ms(1000);
;PCODE: $00000A49 VOL: 0
;PCODE: $00000A4A VOL: 0
; 0000 02BD             setzamin1 = true;
;PCODE: $00000A4B VOL: 0
;PCODE: $00000A4C VOL: 0
; 0000 02BE         }
; 0000 02BF 
; 0000 02C0     }
;PCODE: $00000A4D VOL: 0
;PCODE: $00000A4E VOL: 0
;PCODE: $00000A4F VOL: 0
; 0000 02C1     while (setzamin2 == false)
;PCODE: $00000A50 VOL: 0
;PCODE: $00000A51 VOL: 0
;PCODE: $00000A52 VOL: 0
;PCODE: $00000A53 VOL: 0
; 0000 02C2     {
; 0000 02C3         #asm("wdr")
;PCODE: $00000A54 VOL: 0
	wdr
;PCODE: $00000A55 VOL: 0
; 0000 02C4         sensor();
;PCODE: $00000A56 VOL: 0
; 0000 02C5         lcd_clear();
;PCODE: $00000A57 VOL: 0
; 0000 02C6         lcd_gotoxy(0,0);
;PCODE: $00000A58 VOL: 0
;PCODE: $00000A59 VOL: 0
;PCODE: $00000A5A VOL: 0
;PCODE: $00000A5B VOL: 0
; 0000 02C7         lcd_putsf("set zaminR: ");
;PCODE: $00000A5C VOL: 0
;PCODE: $00000A5D VOL: 0
;PCODE: $00000A5E VOL: 0
; 0000 02C8         lcd_putchar((SKR/100)%10 + '0');
;PCODE: $00000A5F VOL: 0
;PCODE: $00000A60 VOL: 0
;PCODE: $00000A61 VOL: 0
;PCODE: $00000A62 VOL: 0
;PCODE: $00000A63 VOL: 0
;PCODE: $00000A64 VOL: 0
;PCODE: $00000A65 VOL: 0
;PCODE: $00000A66 VOL: 0
;PCODE: $00000A67 VOL: 0
; 0000 02C9         lcd_putchar((SKR/10)%10 + '0');
;PCODE: $00000A68 VOL: 0
;PCODE: $00000A69 VOL: 0
;PCODE: $00000A6A VOL: 0
;PCODE: $00000A6B VOL: 0
;PCODE: $00000A6C VOL: 0
;PCODE: $00000A6D VOL: 0
;PCODE: $00000A6E VOL: 0
;PCODE: $00000A6F VOL: 0
;PCODE: $00000A70 VOL: 0
; 0000 02CA         lcd_putchar((SKR/1)%10 + '0');
;PCODE: $00000A71 VOL: 0
;PCODE: $00000A72 VOL: 0
;PCODE: $00000A73 VOL: 0
;PCODE: $00000A74 VOL: 0
;PCODE: $00000A75 VOL: 0
;PCODE: $00000A76 VOL: 0
; 0000 02CB         if (PINC.3 == 1)
;PCODE: $00000A77 VOL: 0
;PCODE: $00000A78 VOL: 0
;PCODE: $00000A79 VOL: 0
; 0000 02CC         {
; 0000 02CD             kafmin2 = SKR;
;PCODE: $00000A7A VOL: 0
;PCODE: $00000A7B VOL: 0
;PCODE: $00000A7C VOL: 0
; 0000 02CE             lcd_clear();
;PCODE: $00000A7D VOL: 0
; 0000 02CF             lcd_gotoxy(0,0);
;PCODE: $00000A7E VOL: 0
;PCODE: $00000A7F VOL: 0
;PCODE: $00000A80 VOL: 0
;PCODE: $00000A81 VOL: 0
; 0000 02D0             lcd_putsf("zaminR set");
;PCODE: $00000A82 VOL: 0
;PCODE: $00000A83 VOL: 0
;PCODE: $00000A84 VOL: 0
; 0000 02D1             delay_ms(1000);
;PCODE: $00000A85 VOL: 0
;PCODE: $00000A86 VOL: 0
; 0000 02D2             setzamin2 = true;
;PCODE: $00000A87 VOL: 0
;PCODE: $00000A88 VOL: 0
; 0000 02D3         }
; 0000 02D4 
; 0000 02D5     }
;PCODE: $00000A89 VOL: 0
;PCODE: $00000A8A VOL: 0
;PCODE: $00000A8B VOL: 0
; 0000 02D6     while (setzamin3 == false)
;PCODE: $00000A8C VOL: 0
;PCODE: $00000A8D VOL: 0
;PCODE: $00000A8E VOL: 0
;PCODE: $00000A8F VOL: 0
; 0000 02D7     {
; 0000 02D8         #asm("wdr")
;PCODE: $00000A90 VOL: 0
	wdr
;PCODE: $00000A91 VOL: 0
; 0000 02D9         sensor();
;PCODE: $00000A92 VOL: 0
; 0000 02DA         lcd_clear();
;PCODE: $00000A93 VOL: 0
; 0000 02DB         lcd_gotoxy(0,0);
;PCODE: $00000A94 VOL: 0
;PCODE: $00000A95 VOL: 0
;PCODE: $00000A96 VOL: 0
;PCODE: $00000A97 VOL: 0
; 0000 02DC         lcd_putsf("set zaminB: ");
;PCODE: $00000A98 VOL: 0
;PCODE: $00000A99 VOL: 0
;PCODE: $00000A9A VOL: 0
; 0000 02DD         lcd_putchar((SKB/100)%10 + '0');
;PCODE: $00000A9B VOL: 0
;PCODE: $00000A9C VOL: 0
;PCODE: $00000A9D VOL: 0
;PCODE: $00000A9E VOL: 0
;PCODE: $00000A9F VOL: 0
;PCODE: $00000AA0 VOL: 0
;PCODE: $00000AA1 VOL: 0
;PCODE: $00000AA2 VOL: 0
;PCODE: $00000AA3 VOL: 0
; 0000 02DE         lcd_putchar((SKB/10)%10 + '0');
;PCODE: $00000AA4 VOL: 0
;PCODE: $00000AA5 VOL: 0
;PCODE: $00000AA6 VOL: 0
;PCODE: $00000AA7 VOL: 0
;PCODE: $00000AA8 VOL: 0
;PCODE: $00000AA9 VOL: 0
;PCODE: $00000AAA VOL: 0
;PCODE: $00000AAB VOL: 0
;PCODE: $00000AAC VOL: 0
; 0000 02DF         lcd_putchar((SKB/1)%10 + '0');
;PCODE: $00000AAD VOL: 0
;PCODE: $00000AAE VOL: 0
;PCODE: $00000AAF VOL: 0
;PCODE: $00000AB0 VOL: 0
;PCODE: $00000AB1 VOL: 0
;PCODE: $00000AB2 VOL: 0
; 0000 02E0         if (PINC.3 == 1)
;PCODE: $00000AB3 VOL: 0
;PCODE: $00000AB4 VOL: 0
;PCODE: $00000AB5 VOL: 0
; 0000 02E1         {
; 0000 02E2             kafmin3 = SKB;
;PCODE: $00000AB6 VOL: 0
;PCODE: $00000AB7 VOL: 0
;PCODE: $00000AB8 VOL: 0
; 0000 02E3             lcd_clear();
;PCODE: $00000AB9 VOL: 0
; 0000 02E4             lcd_gotoxy(0,0);
;PCODE: $00000ABA VOL: 0
;PCODE: $00000ABB VOL: 0
;PCODE: $00000ABC VOL: 0
;PCODE: $00000ABD VOL: 0
; 0000 02E5             lcd_putsf("zaminB set");
;PCODE: $00000ABE VOL: 0
;PCODE: $00000ABF VOL: 0
;PCODE: $00000AC0 VOL: 0
; 0000 02E6             delay_ms(1000);
;PCODE: $00000AC1 VOL: 0
;PCODE: $00000AC2 VOL: 0
; 0000 02E7             setzamin3 = true;
;PCODE: $00000AC3 VOL: 0
;PCODE: $00000AC4 VOL: 0
; 0000 02E8         }
; 0000 02E9 
; 0000 02EA     }
;PCODE: $00000AC5 VOL: 0
;PCODE: $00000AC6 VOL: 0
;PCODE: $00000AC7 VOL: 0
; 0000 02EB     while (setzamin4 == false)
;PCODE: $00000AC8 VOL: 0
;PCODE: $00000AC9 VOL: 0
;PCODE: $00000ACA VOL: 0
;PCODE: $00000ACB VOL: 0
; 0000 02EC     {
; 0000 02ED         #asm("wdr")
;PCODE: $00000ACC VOL: 0
	wdr
;PCODE: $00000ACD VOL: 0
; 0000 02EE         sensor();
;PCODE: $00000ACE VOL: 0
; 0000 02EF         lcd_clear();
;PCODE: $00000ACF VOL: 0
; 0000 02F0         lcd_gotoxy(0,0);
;PCODE: $00000AD0 VOL: 0
;PCODE: $00000AD1 VOL: 0
;PCODE: $00000AD2 VOL: 0
;PCODE: $00000AD3 VOL: 0
; 0000 02F1         lcd_putsf("set zaminL: ");
;PCODE: $00000AD4 VOL: 0
;PCODE: $00000AD5 VOL: 0
;PCODE: $00000AD6 VOL: 0
; 0000 02F2         lcd_putchar((SKL/100)%10 + '0');
;PCODE: $00000AD7 VOL: 0
;PCODE: $00000AD8 VOL: 0
;PCODE: $00000AD9 VOL: 0
;PCODE: $00000ADA VOL: 0
;PCODE: $00000ADB VOL: 0
;PCODE: $00000ADC VOL: 0
;PCODE: $00000ADD VOL: 0
;PCODE: $00000ADE VOL: 0
;PCODE: $00000ADF VOL: 0
; 0000 02F3         lcd_putchar((SKL/10)%10 + '0');
;PCODE: $00000AE0 VOL: 0
;PCODE: $00000AE1 VOL: 0
;PCODE: $00000AE2 VOL: 0
;PCODE: $00000AE3 VOL: 0
;PCODE: $00000AE4 VOL: 0
;PCODE: $00000AE5 VOL: 0
;PCODE: $00000AE6 VOL: 0
;PCODE: $00000AE7 VOL: 0
;PCODE: $00000AE8 VOL: 0
; 0000 02F4         lcd_putchar((SKL/1)%10 + '0');
;PCODE: $00000AE9 VOL: 0
;PCODE: $00000AEA VOL: 0
;PCODE: $00000AEB VOL: 0
;PCODE: $00000AEC VOL: 0
;PCODE: $00000AED VOL: 0
;PCODE: $00000AEE VOL: 0
; 0000 02F5         if (PINC.3 == 1)
;PCODE: $00000AEF VOL: 0
;PCODE: $00000AF0 VOL: 0
;PCODE: $00000AF1 VOL: 0
; 0000 02F6         {
; 0000 02F7             kafmin4 = SKL;
;PCODE: $00000AF2 VOL: 0
;PCODE: $00000AF3 VOL: 0
;PCODE: $00000AF4 VOL: 0
; 0000 02F8             lcd_clear();
;PCODE: $00000AF5 VOL: 0
; 0000 02F9             lcd_gotoxy(0,0);
;PCODE: $00000AF6 VOL: 0
;PCODE: $00000AF7 VOL: 0
;PCODE: $00000AF8 VOL: 0
;PCODE: $00000AF9 VOL: 0
; 0000 02FA             lcd_putsf("zaminL set");
;PCODE: $00000AFA VOL: 0
;PCODE: $00000AFB VOL: 0
;PCODE: $00000AFC VOL: 0
; 0000 02FB             delay_ms(1000);
;PCODE: $00000AFD VOL: 0
;PCODE: $00000AFE VOL: 0
; 0000 02FC             setzamin4 = true;
;PCODE: $00000AFF VOL: 0
;PCODE: $00000B00 VOL: 0
; 0000 02FD         }
; 0000 02FE 
; 0000 02FF     }
;PCODE: $00000B01 VOL: 0
;PCODE: $00000B02 VOL: 0
;PCODE: $00000B03 VOL: 0
; 0000 0300     kafmid1 = (kafmin1 + kafmax1)/2;
;PCODE: $00000B04 VOL: 0
;PCODE: $00000B05 VOL: 0
;PCODE: $00000B06 VOL: 0
;PCODE: $00000B07 VOL: 0
;PCODE: $00000B08 VOL: 0
;PCODE: $00000B09 VOL: 0
;PCODE: $00000B0A VOL: 0
;PCODE: $00000B0B VOL: 0
;PCODE: $00000B0C VOL: 0
;PCODE: $00000B0D VOL: 0
;PCODE: $00000B0E VOL: 0
; 0000 0301     kafmid2 = (kafmin2 + kafmax2)/2;
;PCODE: $00000B0F VOL: 0
;PCODE: $00000B10 VOL: 0
;PCODE: $00000B11 VOL: 0
;PCODE: $00000B12 VOL: 0
;PCODE: $00000B13 VOL: 0
;PCODE: $00000B14 VOL: 0
;PCODE: $00000B15 VOL: 0
;PCODE: $00000B16 VOL: 0
;PCODE: $00000B17 VOL: 0
;PCODE: $00000B18 VOL: 0
;PCODE: $00000B19 VOL: 0
; 0000 0302     kafmid3 = (kafmin3 + kafmax3)/2;
;PCODE: $00000B1A VOL: 0
;PCODE: $00000B1B VOL: 0
;PCODE: $00000B1C VOL: 0
;PCODE: $00000B1D VOL: 0
;PCODE: $00000B1E VOL: 0
;PCODE: $00000B1F VOL: 0
;PCODE: $00000B20 VOL: 0
;PCODE: $00000B21 VOL: 0
;PCODE: $00000B22 VOL: 0
;PCODE: $00000B23 VOL: 0
;PCODE: $00000B24 VOL: 0
; 0000 0303     kafmid4 = (kafmin4 + kafmax4)/2;
;PCODE: $00000B25 VOL: 0
;PCODE: $00000B26 VOL: 0
;PCODE: $00000B27 VOL: 0
;PCODE: $00000B28 VOL: 0
;PCODE: $00000B29 VOL: 0
;PCODE: $00000B2A VOL: 0
;PCODE: $00000B2B VOL: 0
;PCODE: $00000B2C VOL: 0
;PCODE: $00000B2D VOL: 0
;PCODE: $00000B2E VOL: 0
;PCODE: $00000B2F VOL: 0
; 0000 0304     while (setback1 == false)
;PCODE: $00000B30 VOL: 0
;PCODE: $00000B31 VOL: 0
;PCODE: $00000B32 VOL: 0
;PCODE: $00000B33 VOL: 0
; 0000 0305     {
; 0000 0306         #asm("wdr")
;PCODE: $00000B34 VOL: 0
	wdr
;PCODE: $00000B35 VOL: 0
; 0000 0307         sensor();
;PCODE: $00000B36 VOL: 0
; 0000 0308         lcd_clear();
;PCODE: $00000B37 VOL: 0
; 0000 0309         lcd_gotoxy(0,0);
;PCODE: $00000B38 VOL: 0
;PCODE: $00000B39 VOL: 0
;PCODE: $00000B3A VOL: 0
;PCODE: $00000B3B VOL: 0
; 0000 030A         lcd_putsf("set back1: ");
;PCODE: $00000B3C VOL: 0
;PCODE: $00000B3D VOL: 0
;PCODE: $00000B3E VOL: 0
; 0000 030B         lcd_putchar((SB/100)%10 + '0');
;PCODE: $00000B3F VOL: 0
;PCODE: $00000B40 VOL: 0
;PCODE: $00000B41 VOL: 0
;PCODE: $00000B42 VOL: 0
;PCODE: $00000B43 VOL: 0
;PCODE: $00000B44 VOL: 0
;PCODE: $00000B45 VOL: 0
;PCODE: $00000B46 VOL: 0
;PCODE: $00000B47 VOL: 0
; 0000 030C         lcd_putchar((SB/10)%10 + '0');
;PCODE: $00000B48 VOL: 0
;PCODE: $00000B49 VOL: 0
;PCODE: $00000B4A VOL: 0
;PCODE: $00000B4B VOL: 0
;PCODE: $00000B4C VOL: 0
;PCODE: $00000B4D VOL: 0
;PCODE: $00000B4E VOL: 0
;PCODE: $00000B4F VOL: 0
;PCODE: $00000B50 VOL: 0
; 0000 030D         lcd_putchar((SB/1)%10 + '0');
;PCODE: $00000B51 VOL: 0
;PCODE: $00000B52 VOL: 0
;PCODE: $00000B53 VOL: 0
;PCODE: $00000B54 VOL: 0
;PCODE: $00000B55 VOL: 0
;PCODE: $00000B56 VOL: 0
; 0000 030E         if (PINC.3 == 1)
;PCODE: $00000B57 VOL: 0
;PCODE: $00000B58 VOL: 0
;PCODE: $00000B59 VOL: 0
; 0000 030F         {
; 0000 0310             backmax1 = SB;
;PCODE: $00000B5A VOL: 0
;PCODE: $00000B5B VOL: 0
;PCODE: $00000B5C VOL: 0
; 0000 0311             lcd_clear();
;PCODE: $00000B5D VOL: 0
; 0000 0312             lcd_gotoxy(0,0);
;PCODE: $00000B5E VOL: 0
;PCODE: $00000B5F VOL: 0
;PCODE: $00000B60 VOL: 0
;PCODE: $00000B61 VOL: 0
; 0000 0313             lcd_putsf("back1 set");
;PCODE: $00000B62 VOL: 0
;PCODE: $00000B63 VOL: 0
;PCODE: $00000B64 VOL: 0
; 0000 0314             delay_ms(1000);
;PCODE: $00000B65 VOL: 0
;PCODE: $00000B66 VOL: 0
; 0000 0315             setback1 = true;
;PCODE: $00000B67 VOL: 0
;PCODE: $00000B68 VOL: 0
; 0000 0316         }
; 0000 0317 
; 0000 0318     }
;PCODE: $00000B69 VOL: 0
;PCODE: $00000B6A VOL: 0
;PCODE: $00000B6B VOL: 0
; 0000 0319     while (setback2 == false)
;PCODE: $00000B6C VOL: 0
;PCODE: $00000B6D VOL: 0
;PCODE: $00000B6E VOL: 0
;PCODE: $00000B6F VOL: 0
; 0000 031A     {
; 0000 031B         #asm("wdr")
;PCODE: $00000B70 VOL: 0
	wdr
;PCODE: $00000B71 VOL: 0
; 0000 031C         sensor();
;PCODE: $00000B72 VOL: 0
; 0000 031D         lcd_clear();
;PCODE: $00000B73 VOL: 0
; 0000 031E         lcd_gotoxy(0,0);
;PCODE: $00000B74 VOL: 0
;PCODE: $00000B75 VOL: 0
;PCODE: $00000B76 VOL: 0
;PCODE: $00000B77 VOL: 0
; 0000 031F         lcd_putsf("set back2: ");
;PCODE: $00000B78 VOL: 0
;PCODE: $00000B79 VOL: 0
;PCODE: $00000B7A VOL: 0
; 0000 0320         lcd_putchar((SB/100)%10 + '0');
;PCODE: $00000B7B VOL: 0
;PCODE: $00000B7C VOL: 0
;PCODE: $00000B7D VOL: 0
;PCODE: $00000B7E VOL: 0
;PCODE: $00000B7F VOL: 0
;PCODE: $00000B80 VOL: 0
;PCODE: $00000B81 VOL: 0
;PCODE: $00000B82 VOL: 0
;PCODE: $00000B83 VOL: 0
; 0000 0321         lcd_putchar((SB/10)%10 + '0');
;PCODE: $00000B84 VOL: 0
;PCODE: $00000B85 VOL: 0
;PCODE: $00000B86 VOL: 0
;PCODE: $00000B87 VOL: 0
;PCODE: $00000B88 VOL: 0
;PCODE: $00000B89 VOL: 0
;PCODE: $00000B8A VOL: 0
;PCODE: $00000B8B VOL: 0
;PCODE: $00000B8C VOL: 0
; 0000 0322         lcd_putchar((SB/1)%10 + '0');
;PCODE: $00000B8D VOL: 0
;PCODE: $00000B8E VOL: 0
;PCODE: $00000B8F VOL: 0
;PCODE: $00000B90 VOL: 0
;PCODE: $00000B91 VOL: 0
;PCODE: $00000B92 VOL: 0
; 0000 0323         if (PINC.3 == 1)
;PCODE: $00000B93 VOL: 0
;PCODE: $00000B94 VOL: 0
;PCODE: $00000B95 VOL: 0
; 0000 0324         {
; 0000 0325             backmax2 = SB;
;PCODE: $00000B96 VOL: 0
;PCODE: $00000B97 VOL: 0
;PCODE: $00000B98 VOL: 0
; 0000 0326             lcd_clear();
;PCODE: $00000B99 VOL: 0
; 0000 0327             lcd_gotoxy(0,0);
;PCODE: $00000B9A VOL: 0
;PCODE: $00000B9B VOL: 0
;PCODE: $00000B9C VOL: 0
;PCODE: $00000B9D VOL: 0
; 0000 0328             lcd_putsf("back2 set");
;PCODE: $00000B9E VOL: 0
;PCODE: $00000B9F VOL: 0
;PCODE: $00000BA0 VOL: 0
; 0000 0329             delay_ms(1000);
;PCODE: $00000BA1 VOL: 0
;PCODE: $00000BA2 VOL: 0
; 0000 032A             setback2 = true;
;PCODE: $00000BA3 VOL: 0
;PCODE: $00000BA4 VOL: 0
; 0000 032B         }
; 0000 032C 
; 0000 032D     }
;PCODE: $00000BA5 VOL: 0
;PCODE: $00000BA6 VOL: 0
;PCODE: $00000BA7 VOL: 0
; 0000 032E     while (setback3 == false)
;PCODE: $00000BA8 VOL: 0
;PCODE: $00000BA9 VOL: 0
;PCODE: $00000BAA VOL: 0
;PCODE: $00000BAB VOL: 0
; 0000 032F     {
; 0000 0330         #asm("wdr")
;PCODE: $00000BAC VOL: 0
	wdr
;PCODE: $00000BAD VOL: 0
; 0000 0331         sensor();
;PCODE: $00000BAE VOL: 0
; 0000 0332         lcd_clear();
;PCODE: $00000BAF VOL: 0
; 0000 0333         lcd_gotoxy(0,0);
;PCODE: $00000BB0 VOL: 0
;PCODE: $00000BB1 VOL: 0
;PCODE: $00000BB2 VOL: 0
;PCODE: $00000BB3 VOL: 0
; 0000 0334         lcd_putsf("set back3: ");
;PCODE: $00000BB4 VOL: 0
;PCODE: $00000BB5 VOL: 0
;PCODE: $00000BB6 VOL: 0
; 0000 0335         lcd_putchar((SB/100)%10 + '0');
;PCODE: $00000BB7 VOL: 0
;PCODE: $00000BB8 VOL: 0
;PCODE: $00000BB9 VOL: 0
;PCODE: $00000BBA VOL: 0
;PCODE: $00000BBB VOL: 0
;PCODE: $00000BBC VOL: 0
;PCODE: $00000BBD VOL: 0
;PCODE: $00000BBE VOL: 0
;PCODE: $00000BBF VOL: 0
; 0000 0336         lcd_putchar((SB/10)%10 + '0');
;PCODE: $00000BC0 VOL: 0
;PCODE: $00000BC1 VOL: 0
;PCODE: $00000BC2 VOL: 0
;PCODE: $00000BC3 VOL: 0
;PCODE: $00000BC4 VOL: 0
;PCODE: $00000BC5 VOL: 0
;PCODE: $00000BC6 VOL: 0
;PCODE: $00000BC7 VOL: 0
;PCODE: $00000BC8 VOL: 0
; 0000 0337         lcd_putchar((SB/1)%10 + '0');
;PCODE: $00000BC9 VOL: 0
;PCODE: $00000BCA VOL: 0
;PCODE: $00000BCB VOL: 0
;PCODE: $00000BCC VOL: 0
;PCODE: $00000BCD VOL: 0
;PCODE: $00000BCE VOL: 0
; 0000 0338         if (PINC.3 == 1)
;PCODE: $00000BCF VOL: 0
;PCODE: $00000BD0 VOL: 0
;PCODE: $00000BD1 VOL: 0
; 0000 0339         {
; 0000 033A             backmax3 = SB;
;PCODE: $00000BD2 VOL: 0
;PCODE: $00000BD3 VOL: 0
;PCODE: $00000BD4 VOL: 0
; 0000 033B             lcd_clear();
;PCODE: $00000BD5 VOL: 0
; 0000 033C             lcd_gotoxy(0,0);
;PCODE: $00000BD6 VOL: 0
;PCODE: $00000BD7 VOL: 0
;PCODE: $00000BD8 VOL: 0
;PCODE: $00000BD9 VOL: 0
; 0000 033D             lcd_putsf("back3 set");
;PCODE: $00000BDA VOL: 0
;PCODE: $00000BDB VOL: 0
;PCODE: $00000BDC VOL: 0
; 0000 033E             delay_ms(1000);
;PCODE: $00000BDD VOL: 0
;PCODE: $00000BDE VOL: 0
; 0000 033F             setback3 = true;
;PCODE: $00000BDF VOL: 0
;PCODE: $00000BE0 VOL: 0
; 0000 0340         }
; 0000 0341 
; 0000 0342     }
;PCODE: $00000BE1 VOL: 0
;PCODE: $00000BE2 VOL: 0
;PCODE: $00000BE3 VOL: 0
; 0000 0343     lcd_clear();
;PCODE: $00000BE4 VOL: 0
; 0000 0344     lcd_putsf("setup done");
;PCODE: $00000BE5 VOL: 0
;PCODE: $00000BE6 VOL: 0
;PCODE: $00000BE7 VOL: 0
; 0000 0345     delay_ms(1000);
;PCODE: $00000BE8 VOL: 0
;PCODE: $00000BE9 VOL: 0
; 0000 0346     print_lcd = old_print_lcd;
;PCODE: $00000BEA VOL: 0
;PCODE: $00000BEB VOL: 0
; 0000 0347 }
;PCODE: $00000BEC VOL: 0
;PCODE: $00000BED VOL: 0
;
;void main(void)
; 0000 034A {
;PCODE: $00000BEE VOL: 0
; 0000 034B {
; 0000 034C // Declare your local variables here
; 0000 034D 
; 0000 034E // Input/Output Ports initialization
; 0000 034F // Port A initialization
; 0000 0350 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0351 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $00000BEF VOL: 0
;PCODE: $00000BF0 VOL: 0
; 0000 0352 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0353 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000BF1 VOL: 0
;PCODE: $00000BF2 VOL: 0
; 0000 0354 
; 0000 0355 // Port B initialization
; 0000 0356 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=In Bit1=In Bit0=In
; 0000 0357 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000BF3 VOL: 0
;PCODE: $00000BF4 VOL: 0
; 0000 0358 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=T Bit1=T Bit0=T
; 0000 0359 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000BF5 VOL: 0
;PCODE: $00000BF6 VOL: 0
; 0000 035A 
; 0000 035B // Port C initialization
; 0000 035C // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 035D DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000BF7 VOL: 0
;PCODE: $00000BF8 VOL: 0
; 0000 035E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 035F PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000BF9 VOL: 0
;PCODE: $00000BFA VOL: 0
; 0000 0360 
; 0000 0361 // Port D initialization
; 0000 0362 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0363 DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $00000BFB VOL: 0
;PCODE: $00000BFC VOL: 0
; 0000 0364 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0365 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000BFD VOL: 0
;PCODE: $00000BFE VOL: 0
; 0000 0366 
; 0000 0367 // Timer/Counter 0 initialization
; 0000 0368 // Clock source: System Clock
; 0000 0369 // Clock value: 31.250 kHz
; 0000 036A // Mode: Fast PWM top=0xFF
; 0000 036B // OC0 output: Non-Inverted PWM
; 0000 036C // Timer Period: 8.192 ms
; 0000 036D // Output Pulse(s):
; 0000 036E // OC0 Period: 8.192 ms Width: 0 us
; 0000 036F TCCR0=(1<<WGM00) | (1<<COM01) | (0<<COM00) | (1<<WGM01) | (1<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000BFF VOL: 0
;PCODE: $00000C00 VOL: 0
; 0000 0370 TCNT0=0x00;
;PCODE: $00000C01 VOL: 0
;PCODE: $00000C02 VOL: 0
; 0000 0371 OCR0=0x00;
;PCODE: $00000C03 VOL: 0
;PCODE: $00000C04 VOL: 0
; 0000 0372 
; 0000 0373 // Timer/Counter 1 initialization
; 0000 0374 // Clock source: System Clock
; 0000 0375 // Clock value: 31.250 kHz
; 0000 0376 // Mode: Fast PWM top=0x00FF
; 0000 0377 // OC1A output: Non-Inverted PWM
; 0000 0378 // OC1B output: Non-Inverted PWM
; 0000 0379 // Noise Canceler: Off
; 0000 037A // Input Capture on Falling Edge
; 0000 037B // Timer Period: 8.192 ms
; 0000 037C // Output Pulse(s):
; 0000 037D // OC1A Period: 8.192 ms Width: 0 us// OC1B Period: 8.192 ms Width: 0 us
; 0000 037E // Timer1 Overflow Interrupt: Off
; 0000 037F // Input Capture Interrupt: Off
; 0000 0380 // Compare A Match Interrupt: Off
; 0000 0381 // Compare B Match Interrupt: Off
; 0000 0382 TCCR1A=(1<<COM1A1) | (0<<COM1A0) | (1<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (1<<WGM10);
;PCODE: $00000C05 VOL: 0
;PCODE: $00000C06 VOL: 0
; 0000 0383 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (1<<WGM12) | (1<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000C07 VOL: 0
;PCODE: $00000C08 VOL: 0
; 0000 0384 TCNT1H=0x00;
;PCODE: $00000C09 VOL: 0
;PCODE: $00000C0A VOL: 0
; 0000 0385 TCNT1L=0x00;
;PCODE: $00000C0B VOL: 0
;PCODE: $00000C0C VOL: 0
; 0000 0386 ICR1H=0x00;
;PCODE: $00000C0D VOL: 0
;PCODE: $00000C0E VOL: 0
; 0000 0387 ICR1L=0x00;
;PCODE: $00000C0F VOL: 0
;PCODE: $00000C10 VOL: 0
; 0000 0388 OCR1AH=0x00;
;PCODE: $00000C11 VOL: 0
;PCODE: $00000C12 VOL: 0
; 0000 0389 OCR1AL=0x00;
;PCODE: $00000C13 VOL: 0
;PCODE: $00000C14 VOL: 0
; 0000 038A OCR1BH=0x00;
;PCODE: $00000C15 VOL: 0
;PCODE: $00000C16 VOL: 0
; 0000 038B OCR1BL=0x00;
;PCODE: $00000C17 VOL: 0
;PCODE: $00000C18 VOL: 0
; 0000 038C 
; 0000 038D // Timer/Counter 2 initialization
; 0000 038E // Clock source: System Clock
; 0000 038F // Clock value: 31.250 kHz
; 0000 0390 // Mode: Fast PWM top=0xFF
; 0000 0391 // OC2 output: Non-Inverted PWM
; 0000 0392 // Timer Period: 8.192 ms
; 0000 0393 // Output Pulse(s):
; 0000 0394 // OC2 Period: 8.192 ms Width: 0 us
; 0000 0395 ASSR=0<<AS2;
;PCODE: $00000C19 VOL: 0
;PCODE: $00000C1A VOL: 0
; 0000 0396 TCCR2=(1<<PWM2) | (1<<COM21) | (0<<COM20) | (1<<CTC2) | (1<<CS22) | (1<<CS21) | (0<<CS20);
;PCODE: $00000C1B VOL: 0
;PCODE: $00000C1C VOL: 0
; 0000 0397 TCNT2=0x00;
;PCODE: $00000C1D VOL: 0
;PCODE: $00000C1E VOL: 0
; 0000 0398 OCR2=0x00;
;PCODE: $00000C1F VOL: 0
;PCODE: $00000C20 VOL: 0
; 0000 0399 
; 0000 039A // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 039B TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000C21 VOL: 0
;PCODE: $00000C22 VOL: 0
; 0000 039C 
; 0000 039D // External Interrupt(s) initialization
; 0000 039E // INT0: Off
; 0000 039F // INT1: Off
; 0000 03A0 // INT2: Off
; 0000 03A1 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000C23 VOL: 0
;PCODE: $00000C24 VOL: 0
; 0000 03A2 MCUCSR=(0<<ISC2);
;PCODE: $00000C25 VOL: 0
;PCODE: $00000C26 VOL: 0
; 0000 03A3 
; 0000 03A4 // USART initialization
; 0000 03A5 // USART disabled
; 0000 03A6 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $00000C27 VOL: 0
;PCODE: $00000C28 VOL: 0
; 0000 03A7 
; 0000 03A8 // Analog Comparator initialization
; 0000 03A9 // Analog Comparator: Off
; 0000 03AA // The Analog Comparator's positive input is
; 0000 03AB // connected to the AIN0 pin
; 0000 03AC // The Analog Comparator's negative input is
; 0000 03AD // connected to the AIN1 pin
; 0000 03AE ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000C29 VOL: 0
;PCODE: $00000C2A VOL: 0
; 0000 03AF 
; 0000 03B0 // ADC initialization
; 0000 03B1 // ADC Clock frequency: 62.500 kHz
; 0000 03B2 // ADC Voltage Reference: AVCC pin
; 0000 03B3 // ADC Auto Trigger Source: ADC Stopped
; 0000 03B4 ADMUX=ADC_VREF_TYPE;
;PCODE: $00000C2B VOL: 0
;PCODE: $00000C2C VOL: 0
; 0000 03B5 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $00000C2D VOL: 0
;PCODE: $00000C2E VOL: 0
; 0000 03B6 SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $00000C2F VOL: 0
;PCODE: $00000C30 VOL: 0
; 0000 03B7 
; 0000 03B8 // SPI initialization
; 0000 03B9 // SPI disabled
; 0000 03BA SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000C31 VOL: 0
;PCODE: $00000C32 VOL: 0
; 0000 03BB 
; 0000 03BC // TWI initialization
; 0000 03BD // TWI disabled
; 0000 03BE TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000C33 VOL: 0
;PCODE: $00000C34 VOL: 0
; 0000 03BF 
; 0000 03C0 // Bit-Banged I2C Bus initialization
; 0000 03C1 // I2C Port: PORTB
; 0000 03C2 // I2C SDA bit: 1
; 0000 03C3 // I2C SCL bit: 0
; 0000 03C4 // Bit Rate: 100 kHz
; 0000 03C5 // Note: I2C settings are specified in the
; 0000 03C6 // Project|Configure|C Compiler|Libraries|I2C menu.
; 0000 03C7 i2c_init();
;PCODE: $00000C35 VOL: 0
; 0000 03C8 
; 0000 03C9 // Alphanumeric LCD initialization
; 0000 03CA // Connections are specified in the
; 0000 03CB // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 03CC // RS - PORTC Bit 0
; 0000 03CD // RD - PORTC Bit 1
; 0000 03CE // EN - PORTC Bit 2
; 0000 03CF // D4 - PORTC Bit 4
; 0000 03D0 // D5 - PORTC Bit 5
; 0000 03D1 // D6 - PORTC Bit 6
; 0000 03D2 // D7 - PORTC Bit 7
; 0000 03D3 // Characters/line: 16
; 0000 03D4 lcd_init(16);
;PCODE: $00000C36 VOL: 0
;PCODE: $00000C37 VOL: 0
; 0000 03D5 
; 0000 03D6 // Watchdog Timer initialization
; 0000 03D7 // Watchdog Timer Prescaler: OSC/256k
; 0000 03D8 WDTCR=(0<<WDTOE) | (1<<WDE) | (1<<WDP2) | (0<<WDP1) | (0<<WDP0);
;PCODE: $00000C38 VOL: 0
;PCODE: $00000C39 VOL: 0
; 0000 03D9 }
; 0000 03DA 
; 0000 03DB     delay_ms(3000);
;PCODE: $00000C3A VOL: 0
;PCODE: $00000C3B VOL: 0
; 0000 03DC 
; 0000 03DD     while (1)
;PCODE: $00000C3C VOL: 0
; 0000 03DE     {
; 0000 03DF         #asm("wdr")
;PCODE: $00000C3D VOL: 0
	wdr
;PCODE: $00000C3E VOL: 0
; 0000 03E0         if (PINC.3 == 1)    c=compass_read(1);
;PCODE: $00000C3F VOL: 0
;PCODE: $00000C40 VOL: 0
;PCODE: $00000C41 VOL: 0
;PCODE: $00000C42 VOL: 0
;PCODE: $00000C43 VOL: 0
;PCODE: $00000C44 VOL: 0
;PCODE: $00000C45 VOL: 0
;PCODE: $00000C46 VOL: 0
; 0000 03E1         sensor();
;PCODE: $00000C47 VOL: 0
;PCODE: $00000C48 VOL: 0
; 0000 03E2         if(SKF>600 && out==0)
;PCODE: $00000C49 VOL: 0
;PCODE: $00000C4A VOL: 0
;PCODE: $00000C4B VOL: 0
;PCODE: $00000C4C VOL: 0
;PCODE: $00000C4D VOL: 0
;PCODE: $00000C4E VOL: 0
;PCODE: $00000C4F VOL: 0
;PCODE: $00000C50 VOL: 0
;PCODE: $00000C51 VOL: 0
;PCODE: $00000C52 VOL: 0
; 0000 03E3             {
; 0000 03E4             motor(-255,-255,255,255);
;PCODE: $00000C53 VOL: 0
;PCODE: $00000C54 VOL: 0
;PCODE: $00000C55 VOL: 0
;PCODE: $00000C56 VOL: 0
;PCODE: $00000C57 VOL: 0
;PCODE: $00000C58 VOL: 0
;PCODE: $00000C59 VOL: 0
;PCODE: $00000C5A VOL: 0
;PCODE: $00000C5B VOL: 0
; 0000 03E5             delay_ms(400);
;PCODE: $00000C5C VOL: 0
;PCODE: $00000C5D VOL: 0
; 0000 03E6             out='F';
;PCODE: $00000C5E VOL: 0
;PCODE: $00000C5F VOL: 0
; 0000 03E7             }
; 0000 03E8         if(SKB>600 && out==0)
;PCODE: $00000C60 VOL: 0
;PCODE: $00000C61 VOL: 0
;PCODE: $00000C62 VOL: 0
;PCODE: $00000C63 VOL: 0
;PCODE: $00000C64 VOL: 0
;PCODE: $00000C65 VOL: 0
;PCODE: $00000C66 VOL: 0
;PCODE: $00000C67 VOL: 0
;PCODE: $00000C68 VOL: 0
;PCODE: $00000C69 VOL: 0
;PCODE: $00000C6A VOL: 0
; 0000 03E9             {
; 0000 03EA             motor(255,255,-255,-255);
;PCODE: $00000C6B VOL: 0
;PCODE: $00000C6C VOL: 0
;PCODE: $00000C6D VOL: 0
;PCODE: $00000C6E VOL: 0
;PCODE: $00000C6F VOL: 0
;PCODE: $00000C70 VOL: 0
;PCODE: $00000C71 VOL: 0
;PCODE: $00000C72 VOL: 0
; 0000 03EB             delay_ms(400);
;PCODE: $00000C73 VOL: 0
;PCODE: $00000C74 VOL: 0
; 0000 03EC             out='B';
;PCODE: $00000C75 VOL: 0
;PCODE: $00000C76 VOL: 0
; 0000 03ED             }
; 0000 03EE         if(SKR>600 && out==0)
;PCODE: $00000C77 VOL: 0
;PCODE: $00000C78 VOL: 0
;PCODE: $00000C79 VOL: 0
;PCODE: $00000C7A VOL: 0
;PCODE: $00000C7B VOL: 0
;PCODE: $00000C7C VOL: 0
;PCODE: $00000C7D VOL: 0
;PCODE: $00000C7E VOL: 0
;PCODE: $00000C7F VOL: 0
;PCODE: $00000C80 VOL: 0
;PCODE: $00000C81 VOL: 0
; 0000 03EF             {
; 0000 03F0             motor(255,-255,-255,255);
;PCODE: $00000C82 VOL: 0
;PCODE: $00000C83 VOL: 0
;PCODE: $00000C84 VOL: 0
;PCODE: $00000C85 VOL: 0
;PCODE: $00000C86 VOL: 0
;PCODE: $00000C87 VOL: 0
;PCODE: $00000C88 VOL: 0
;PCODE: $00000C89 VOL: 0
;PCODE: $00000C8A VOL: 0
; 0000 03F1             delay_ms(400);
;PCODE: $00000C8B VOL: 0
;PCODE: $00000C8C VOL: 0
; 0000 03F2             out='R';
;PCODE: $00000C8D VOL: 0
;PCODE: $00000C8E VOL: 0
; 0000 03F3             }
; 0000 03F4         if(SKL>600 && out==0)
;PCODE: $00000C8F VOL: 0
;PCODE: $00000C90 VOL: 0
;PCODE: $00000C91 VOL: 0
;PCODE: $00000C92 VOL: 0
;PCODE: $00000C93 VOL: 0
;PCODE: $00000C94 VOL: 0
;PCODE: $00000C95 VOL: 0
;PCODE: $00000C96 VOL: 0
;PCODE: $00000C97 VOL: 0
;PCODE: $00000C98 VOL: 0
;PCODE: $00000C99 VOL: 0
; 0000 03F5             {
; 0000 03F6             motor(-255,255,255,-255);
;PCODE: $00000C9A VOL: 0
;PCODE: $00000C9B VOL: 0
;PCODE: $00000C9C VOL: 0
;PCODE: $00000C9D VOL: 0
;PCODE: $00000C9E VOL: 0
;PCODE: $00000C9F VOL: 0
;PCODE: $00000CA0 VOL: 0
;PCODE: $00000CA1 VOL: 0
; 0000 03F7             delay_ms(400);
;PCODE: $00000CA2 VOL: 0
;PCODE: $00000CA3 VOL: 0
; 0000 03F8             out='L';
;PCODE: $00000CA4 VOL: 0
;PCODE: $00000CA5 VOL: 0
; 0000 03F9             }
; 0000 03FA 
; 0000 03FB         while(out=='F' && min<800)
;PCODE: $00000CA6 VOL: 0
;PCODE: $00000CA7 VOL: 0
;PCODE: $00000CA8 VOL: 0
;PCODE: $00000CA9 VOL: 0
;PCODE: $00000CAA VOL: 0
;PCODE: $00000CAB VOL: 0
;PCODE: $00000CAC VOL: 0
;PCODE: $00000CAD VOL: 0
;PCODE: $00000CAE VOL: 0
;PCODE: $00000CAF VOL: 0
;PCODE: $00000CB0 VOL: 0
;PCODE: $00000CB1 VOL: 0
; 0000 03FC             {
; 0000 03FD             sensor();
;PCODE: $00000CB2 VOL: 0
; 0000 03FE             if(imin<12 && imin>4)
;PCODE: $00000CB3 VOL: 0
;PCODE: $00000CB4 VOL: 0
;PCODE: $00000CB5 VOL: 0
;PCODE: $00000CB6 VOL: 0
;PCODE: $00000CB7 VOL: 0
;PCODE: $00000CB8 VOL: 0
;PCODE: $00000CB9 VOL: 0
;PCODE: $00000CBA VOL: 0
;PCODE: $00000CBB VOL: 0
;PCODE: $00000CBC VOL: 0
; 0000 03FF                 catch();
;PCODE: $00000CBD VOL: 0
; 0000 0400             else motor(0,0,0,0);
;PCODE: $00000CBE VOL: 0
;PCODE: $00000CBF VOL: 0
;PCODE: $00000CC0 VOL: 0
;PCODE: $00000CC1 VOL: 0
;PCODE: $00000CC2 VOL: 0
;PCODE: $00000CC3 VOL: 0
;PCODE: $00000CC4 VOL: 0
;PCODE: $00000CC5 VOL: 0
;PCODE: $00000CC6 VOL: 0
;PCODE: $00000CC7 VOL: 0
;PCODE: $00000CC8 VOL: 0
; 0000 0401             }
;PCODE: $00000CC9 VOL: 0
;PCODE: $00000CCA VOL: 0
;PCODE: $00000CCB VOL: 0
; 0000 0402         while(out=='B' && min<800)
;PCODE: $00000CCC VOL: 0
;PCODE: $00000CCD VOL: 0
;PCODE: $00000CCE VOL: 0
;PCODE: $00000CCF VOL: 0
;PCODE: $00000CD0 VOL: 0
;PCODE: $00000CD1 VOL: 0
;PCODE: $00000CD2 VOL: 0
;PCODE: $00000CD3 VOL: 0
;PCODE: $00000CD4 VOL: 0
;PCODE: $00000CD5 VOL: 0
;PCODE: $00000CD6 VOL: 0
; 0000 0403             {
; 0000 0404             sensor();
;PCODE: $00000CD7 VOL: 0
; 0000 0405             if(!(imin<12 && imin>4))
;PCODE: $00000CD8 VOL: 0
;PCODE: $00000CD9 VOL: 0
;PCODE: $00000CDA VOL: 0
;PCODE: $00000CDB VOL: 0
;PCODE: $00000CDC VOL: 0
;PCODE: $00000CDD VOL: 0
;PCODE: $00000CDE VOL: 0
;PCODE: $00000CDF VOL: 0
; 0000 0406                 catch();
;PCODE: $00000CE0 VOL: 0
; 0000 0407             else motor(0,0,0,0);
;PCODE: $00000CE1 VOL: 0
;PCODE: $00000CE2 VOL: 0
;PCODE: $00000CE3 VOL: 0
;PCODE: $00000CE4 VOL: 0
;PCODE: $00000CE5 VOL: 0
;PCODE: $00000CE6 VOL: 0
;PCODE: $00000CE7 VOL: 0
;PCODE: $00000CE8 VOL: 0
;PCODE: $00000CE9 VOL: 0
;PCODE: $00000CEA VOL: 0
;PCODE: $00000CEB VOL: 0
; 0000 0408             }
;PCODE: $00000CEC VOL: 0
;PCODE: $00000CED VOL: 0
;PCODE: $00000CEE VOL: 0
; 0000 0409         while((out=='R' || SR>300) && min<800)
;PCODE: $00000CEF VOL: 0
;PCODE: $00000CF0 VOL: 0
;PCODE: $00000CF1 VOL: 0
;PCODE: $00000CF2 VOL: 0
;PCODE: $00000CF3 VOL: 0
;PCODE: $00000CF4 VOL: 0
;PCODE: $00000CF5 VOL: 0
;PCODE: $00000CF6 VOL: 0
;PCODE: $00000CF7 VOL: 0
;PCODE: $00000CF8 VOL: 0
;PCODE: $00000CF9 VOL: 0
;PCODE: $00000CFA VOL: 0
;PCODE: $00000CFB VOL: 0
;PCODE: $00000CFC VOL: 0
;PCODE: $00000CFD VOL: 0
;PCODE: $00000CFE VOL: 0
; 0000 040A             {
; 0000 040B             sensor();
;PCODE: $00000CFF VOL: 0
; 0000 040C             if(imin<12 && imin>4)
;PCODE: $00000D00 VOL: 0
;PCODE: $00000D01 VOL: 0
;PCODE: $00000D02 VOL: 0
;PCODE: $00000D03 VOL: 0
;PCODE: $00000D04 VOL: 0
;PCODE: $00000D05 VOL: 0
;PCODE: $00000D06 VOL: 0
;PCODE: $00000D07 VOL: 0
;PCODE: $00000D08 VOL: 0
;PCODE: $00000D09 VOL: 0
; 0000 040D                 catch();
;PCODE: $00000D0A VOL: 0
; 0000 040E             else motor(0,0,0,0);
;PCODE: $00000D0B VOL: 0
;PCODE: $00000D0C VOL: 0
;PCODE: $00000D0D VOL: 0
;PCODE: $00000D0E VOL: 0
;PCODE: $00000D0F VOL: 0
;PCODE: $00000D10 VOL: 0
;PCODE: $00000D11 VOL: 0
;PCODE: $00000D12 VOL: 0
;PCODE: $00000D13 VOL: 0
;PCODE: $00000D14 VOL: 0
;PCODE: $00000D15 VOL: 0
; 0000 040F             }
;PCODE: $00000D16 VOL: 0
;PCODE: $00000D17 VOL: 0
;PCODE: $00000D18 VOL: 0
; 0000 0410         while((out=='L' || SL>300) && min<800)
;PCODE: $00000D19 VOL: 0
;PCODE: $00000D1A VOL: 0
;PCODE: $00000D1B VOL: 0
;PCODE: $00000D1C VOL: 0
;PCODE: $00000D1D VOL: 0
;PCODE: $00000D1E VOL: 0
;PCODE: $00000D1F VOL: 0
;PCODE: $00000D20 VOL: 0
;PCODE: $00000D21 VOL: 0
;PCODE: $00000D22 VOL: 0
;PCODE: $00000D23 VOL: 0
;PCODE: $00000D24 VOL: 0
;PCODE: $00000D25 VOL: 0
;PCODE: $00000D26 VOL: 0
;PCODE: $00000D27 VOL: 0
;PCODE: $00000D28 VOL: 0
; 0000 0411             {
; 0000 0412             sensor();
;PCODE: $00000D29 VOL: 0
; 0000 0413             if(imin<12 && imin>4)
;PCODE: $00000D2A VOL: 0
;PCODE: $00000D2B VOL: 0
;PCODE: $00000D2C VOL: 0
;PCODE: $00000D2D VOL: 0
;PCODE: $00000D2E VOL: 0
;PCODE: $00000D2F VOL: 0
;PCODE: $00000D30 VOL: 0
;PCODE: $00000D31 VOL: 0
;PCODE: $00000D32 VOL: 0
;PCODE: $00000D33 VOL: 0
; 0000 0414                 catch();
;PCODE: $00000D34 VOL: 0
; 0000 0415             else motor(0,0,0,0);
;PCODE: $00000D35 VOL: 0
;PCODE: $00000D36 VOL: 0
;PCODE: $00000D37 VOL: 0
;PCODE: $00000D38 VOL: 0
;PCODE: $00000D39 VOL: 0
;PCODE: $00000D3A VOL: 0
;PCODE: $00000D3B VOL: 0
;PCODE: $00000D3C VOL: 0
;PCODE: $00000D3D VOL: 0
;PCODE: $00000D3E VOL: 0
;PCODE: $00000D3F VOL: 0
; 0000 0416             }
;PCODE: $00000D40 VOL: 0
;PCODE: $00000D41 VOL: 0
;PCODE: $00000D42 VOL: 0
; 0000 0417 
; 0000 0418         out=0;
;PCODE: $00000D43 VOL: 0
;PCODE: $00000D44 VOL: 0
; 0000 0419         catch();
;PCODE: $00000D45 VOL: 0
; 0000 041A         out = 0;
;PCODE: $00000D46 VOL: 0
;PCODE: $00000D47 VOL: 0
; 0000 041B     }
;PCODE: $00000D48 VOL: 0
;PCODE: $00000D49 VOL: 0
; 0000 041C }
;PCODE: $00000D4A VOL: 0
;PCODE: $00000D4B VOL: 0
;PCODE: $00000D4C VOL: 0
