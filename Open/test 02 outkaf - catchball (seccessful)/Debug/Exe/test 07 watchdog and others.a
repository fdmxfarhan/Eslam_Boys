;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <i2c.h>
;
;#asm
;PCODE: $0000000D VOL: 0
    .equ __lcd_port=0x15;PORTC
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0007 #endasm
;#include <lcd.h>
;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
;unsigned int read_adc(unsigned char adc_input)
; 0000 000B {

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 000C ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $00000012 VOL: 0
;	adc_input -> Y+0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 000D // Delay needed for the stabilization of the ADC input voltage
; 0000 000E delay_us(10);
;PCODE: $00000016 VOL: 0
; 0000 000F // Start the AD conversion
; 0000 0010 ADCSRA|=(1<<ADSC);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0011 // Wait for the AD conversion to complete
; 0000 0012 while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0013 ADCSRA|=(1<<ADIF);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0014 return ADCW;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0015 }
;PCODE: $00000024 VOL: 0
;
;
;int SR,SB,SL,SKF,SKL,SKR,SKB;
;int cmp;
;eeprom int c;
;int v=255;

	.DSEG
;int k;
;
;
;
;
;#define I2C_7BIT_DEVICE_ADDRESS 0x54
;#define EEPROM_BUS_ADDRES (I2C_7BIT_DEVICE_ADDRESS << 1)
;
;unsigned char addres=0x54;
;/* read a byte from the EEPROM */
;unsigned char read()
; 0000 0027 {

	.CSEG
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0028 unsigned char data;
; 0000 0029 i2c_start();
;PCODE: $00000027 VOL: 0
;	data -> R17
;PCODE: $00000028 VOL: 0
; 0000 002A i2c_write(EEPROM_BUS_ADDRES | 0);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 002B /*send MSB of address */
; 0000 002C i2c_write(addres >> 8);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 002D /* send LSB of address */
; 0000 002E i2c_write((unsigned char) addres);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 002F i2c_start();
;PCODE: $00000032 VOL: 0
; 0000 0030 i2c_write(EEPROM_BUS_ADDRES | 1);
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0031 data=i2c_read(0);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0032 i2c_stop();
;PCODE: $00000038 VOL: 0
; 0000 0033 return data;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0034 }
;PCODE: $0000003C VOL: 0
;
;#define EEPROM_BUS_ADDRESS 0xc0
;unsigned char compass_read(unsigned char address)
; 0000 0038  {
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0039     unsigned char data;
; 0000 003A     delay_us(100);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;	address -> Y+1
;	data -> R17
;PCODE: $00000041 VOL: 0
; 0000 003B     i2c_start();
;PCODE: $00000042 VOL: 0
; 0000 003C     delay_us(100);
;PCODE: $00000043 VOL: 0
; 0000 003D     i2c_write(EEPROM_BUS_ADDRESS);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 003E     delay_us(100);
;PCODE: $00000046 VOL: 0
; 0000 003F     i2c_write(address);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0040     delay_us(100);
;PCODE: $00000049 VOL: 0
; 0000 0041     i2c_start();
;PCODE: $0000004A VOL: 0
; 0000 0042     delay_us(100);
;PCODE: $0000004B VOL: 0
; 0000 0043     i2c_write(EEPROM_BUS_ADDRESS | 1);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0044     delay_us(100);
;PCODE: $0000004E VOL: 0
; 0000 0045     data=i2c_read(0);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0046     delay_us(100);
;PCODE: $00000052 VOL: 0
; 0000 0047     i2c_stop();
;PCODE: $00000053 VOL: 0
; 0000 0048     delay_us(100);
;PCODE: $00000054 VOL: 0
; 0000 0049     return data;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 004A  }
;PCODE: $0000005A VOL: 0
;
;int x, y, w, h, ch, sn;
;char a,out=0 ;
;
;void read_pixy()
; 0000 0050       {
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0051       a=read();
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0052       //b=getchar();
; 0000 0053       if(a==0xaa)
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0054         {
; 0000 0055         a=read();
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0056         if(a==0x55){
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0057         read();
;PCODE: $00000067 VOL: 0
; 0000 0058         ch = read();
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0059         ch+= read() * 255;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 005A         sn = read();
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 005B         sn += read() * 255;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 005C         x = read();
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 005D         x+=read()*255;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 005E         y = read();
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 005F         y += read() * 255;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0060         w = read();
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0061         w += read() * 255;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0062         h = read();
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0063         h += read() * 255;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0064         }}
;PCODE: $0000009E VOL: 0
; 0000 0065       lcd_gotoxy(0,0);
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0066       lcd_putsf("X=");
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0067       lcd_putchar((x/100)%10+'0');
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0068       lcd_putchar((x/10)%10+'0');
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 0069       lcd_putchar((x/1)%10+'0');
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 006A 
; 0000 006B       lcd_gotoxy(6,0);
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 006C       lcd_putsf("Y=");
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 006D       lcd_putchar((y/100)%10+'0');
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 006E       lcd_putchar((y/10)%10+'0');
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 006F       lcd_putchar((y/1)%10+'0');
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0070       }
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;
;void sensor()
; 0000 0073     {
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 0074     #asm("wdr");
;PCODE: $000000E2 VOL: 0
	wdr
;PCODE: $000000E3 VOL: 0
; 0000 0075 
; 0000 0076     {
; 0000 0077     #asm("wdr");
;PCODE: $000000E4 VOL: 0
	wdr
;PCODE: $000000E5 VOL: 0
; 0000 0078     SB=read_adc(1);
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 0079     SR=read_adc(2);
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 007A     SL=read_adc(3);
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 007B     SKF=read_adc(4);
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 007C     SKR=read_adc(5);
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 007D     SKL=read_adc(7);
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 007E     SKB=read_adc(6);
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 007F     }
; 0000 0080 
; 0000 0081     {
; 0000 0082     #asm("wdr");
;PCODE: $000000FB VOL: 0
	wdr
;PCODE: $000000FC VOL: 0
; 0000 0083     lcd_gotoxy(12,1);
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 0084     //lcd_putchar('K');
; 0000 0085     lcd_putchar((SKL/100)%10+'0');
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 0086     lcd_putchar((SKL/10)%10+'0');
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 0087     lcd_putchar((SKL/1)%10+'0');
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 0088     lcd_gotoxy(8,1);
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 0089     //lcd_putchar('B');
; 0000 008A     lcd_putchar((SKB/100)%10+'0');
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 008B     lcd_putchar((SKB/10)%10+'0');
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 008C     lcd_putchar((SKB/1)%10+'0');
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 008D     lcd_gotoxy(4,1);
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 008E     //lcd_putchar('R');
; 0000 008F     lcd_putchar((SKR/100)%10+'0');
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 0090     lcd_putchar((SKR/10)%10+'0');
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 0091     lcd_putchar((SKR/1)%10+'0');
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 0092 
; 0000 0093     lcd_gotoxy(0,1);
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 0094     lcd_putchar((SKF/100)%10+'0');
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 0095     lcd_putchar((SKF/10)%10+'0');
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 0096     lcd_putchar((SKF/1)%10+'0');
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 0097 
; 0000 0098 //    lcd_gotoxy(0,1);
; 0000 0099 //    //lcd_putchar('K');
; 0000 009A //    lcd_putchar((SL/100)%10+'0');
; 0000 009B //    lcd_putchar((SL/10)%10+'0');
; 0000 009C //    lcd_putchar((SL/1)%10+'0');
; 0000 009D //    lcd_gotoxy(4,1);
; 0000 009E //    //lcd_putchar('B');
; 0000 009F //    lcd_putchar((SB/100)%10+'0');
; 0000 00A0 //    lcd_putchar((SB/10)%10+'0');
; 0000 00A1 //    lcd_putchar((SB/1)%10+'0');
; 0000 00A2 //    lcd_gotoxy(8,1);
; 0000 00A3 //    //lcd_putchar('R');
; 0000 00A4 //    lcd_putchar((SR/100)%10+'0');
; 0000 00A5 //    lcd_putchar((SR/10)%10+'0');
; 0000 00A6 //    lcd_putchar((SR/1)%10+'0');
; 0000 00A7     }
; 0000 00A8 
; 0000 00A9     k=SL-SR;
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 00AA 
; 0000 00AB 
; 0000 00AC     {
; 0000 00AD     #asm("wdr");
;PCODE: $00000170 VOL: 0
	wdr
;PCODE: $00000171 VOL: 0
; 0000 00AE     cmp=compass_read(1)-c;
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 00AF 
; 0000 00B0     if (SL < SR && k>50)
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 00B1         {
; 0000 00B2         cmp = SR/32;
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0000 00B3         v = 200;
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 00B4         }
; 0000 00B5     else if (SR <= SL && k<-50)
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 00B6         {
; 0000 00B7         cmp = SL/10;
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 00B8         v = 200;
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 00B9         }
; 0000 00BA 
; 0000 00BB 
; 0000 00BC     if(cmp>128)  cmp=cmp-255;
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 00BD     if(cmp<-128) cmp=cmp+255;
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 00BE     if (SB < 150 && SR > 250 && SR < 150)
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 00BF         {
; 0000 00C0         cmp = cmp+((SR*3)/20);
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
; 0000 00C1         }
; 0000 00C2     else if (SB < 150 && SL > 250 && SL < 150)
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0000 00C3         {
; 0000 00C4         cmp = cmp+((SL*3)/20);
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 00C5         }
; 0000 00C6         lcd_gotoxy(11,0);
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 00C7     if(cmp>=0)
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 00C8         {
; 0000 00C9         lcd_putchar('+');
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
; 0000 00CA         lcd_putchar((cmp/100)%10+'0');
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 00CB         lcd_putchar((cmp/10)%10+'0');
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 00CC         lcd_putchar((cmp/1)%10+'0');
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0000 00CD         }
; 0000 00CE     else
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
; 0000 00CF         {
; 0000 00D0         lcd_putchar('-');
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 00D1         lcd_putchar((-cmp/100)%10+'0');
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 00D2         lcd_putchar((-cmp/10)%10+'0');
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0000 00D3         lcd_putchar((-cmp/1)%10+'0');
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
; 0000 00D4         }
;PCODE: $00000220 VOL: 0
; 0000 00D5         }
; 0000 00D6 
; 0000 00D7 
; 0000 00D8     if (cmp > -15 && cmp < 15)
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
; 0000 00D9     {
; 0000 00DA         cmp*=-3;
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
; 0000 00DB     }
; 0000 00DC     else
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 00DD     {
; 0000 00DE         cmp*=-2;
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
; 0000 00DF     }
;PCODE: $00000236 VOL: 0
; 0000 00E0     }
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;
;void motor(int ml1,int ml2,int mr2,int mr1)
; 0000 00E3     {
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0000 00E4     sensor();
;PCODE: $0000023B VOL: 0
;	ml1 -> Y+6
;	ml2 -> Y+4
;	mr2 -> Y+2
;	mr1 -> Y+0
;PCODE: $0000023C VOL: 0
; 0000 00E5     #asm("wdr");
;PCODE: $0000023D VOL: 0
	wdr
;PCODE: $0000023E VOL: 0
; 0000 00E6     {
; 0000 00E7     ml1+=cmp;
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
; 0000 00E8     ml2+=cmp;
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0000 00E9     mr2+=cmp;
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
; 0000 00EA     mr1+=cmp;
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 00EB     }
; 0000 00EC     {
; 0000 00ED     if(ml1>255) ml1=255;
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0000 00EE     if(ml2>255) ml2=255;
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
; 0000 00EF     if(mr2>255) mr2=255;
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
; 0000 00F0     if(mr1>255) mr1=255;
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
; 0000 00F1 
; 0000 00F2     if(ml1<-255) ml1=-255;
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
; 0000 00F3     if(ml2<-255) ml2=-255;
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
; 0000 00F4     if(mr2<-255) mr2=-255;
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
; 0000 00F5     if(mr1<-255) mr1=-255;
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 00F6     }
;PCODE: $0000027E VOL: 0
; 0000 00F7     //////////////mr1
; 0000 00F8     {
; 0000 00F9     if(mr1>=0)
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0000 00FA         {
; 0000 00FB         #asm("wdr");
;PCODE: $00000282 VOL: 0
	wdr
;PCODE: $00000283 VOL: 0
; 0000 00FC         PORTD.0=0;
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
; 0000 00FD         OCR0=mr1;
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
; 0000 00FE         }
; 0000 00FF     else
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
; 0000 0100         {
; 0000 0101         #asm("wdr");
;PCODE: $0000028A VOL: 0
	wdr
;PCODE: $0000028B VOL: 0
; 0000 0102         PORTD.0=1;
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 0103         OCR0=mr1+255;
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
; 0000 0104         }
;PCODE: $00000291 VOL: 0
; 0000 0105         }
; 0000 0106     //////////////mr2
; 0000 0107     {
; 0000 0108     if(mr2>=0)
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
; 0000 0109         {
; 0000 010A         #asm("wdr");
;PCODE: $00000295 VOL: 0
	wdr
;PCODE: $00000296 VOL: 0
; 0000 010B         PORTD.1=0;
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
; 0000 010C         OCR1B=mr2;
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
; 0000 010D         }
; 0000 010E     else
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
; 0000 010F         {
; 0000 0110         #asm("wdr");
;PCODE: $0000029D VOL: 0
	wdr
;PCODE: $0000029E VOL: 0
; 0000 0111         PORTD.1=1;
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 0112         OCR1B=mr2+255;
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
; 0000 0113         }
;PCODE: $000002A4 VOL: 0
; 0000 0114         }
; 0000 0115     //////////////mL2
; 0000 0116     {
; 0000 0117     if(ml2>=0)
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
; 0000 0118         {
; 0000 0119         #asm("wdr");
;PCODE: $000002A8 VOL: 0
	wdr
;PCODE: $000002A9 VOL: 0
; 0000 011A         PORTD.2=0;
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
; 0000 011B         OCR1A=ml2;
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 011C         }
; 0000 011D     else
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
; 0000 011E         {
; 0000 011F         #asm("wdr");
;PCODE: $000002B0 VOL: 0
	wdr
;PCODE: $000002B1 VOL: 0
; 0000 0120         PORTD.2=1;
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
; 0000 0121         OCR1A=ml2+255;
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
; 0000 0122         }
;PCODE: $000002B7 VOL: 0
; 0000 0123         }
; 0000 0124     //////////////ml1
; 0000 0125     {
; 0000 0126     if(ml1>=0)
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
; 0000 0127         {
; 0000 0128         #asm("wdr");
;PCODE: $000002BB VOL: 0
	wdr
;PCODE: $000002BC VOL: 0
; 0000 0129         PORTD.3=0;
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 012A         OCR2=ml1;
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
; 0000 012B         }
; 0000 012C     else
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
; 0000 012D         {
; 0000 012E         #asm("wdr");
;PCODE: $000002C3 VOL: 0
	wdr
;PCODE: $000002C4 VOL: 0
; 0000 012F         PORTD.3=1;
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 0130         OCR2=ml1+255;
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
; 0000 0131         }
;PCODE: $000002CA VOL: 0
; 0000 0132         }
; 0000 0133 
; 0000 0134     }
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;//int fl1=0,fl2=0;
;void catch()
; 0000 0137     {
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
; 0000 0138     if(a!=0)
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
; 0000 0139         {
; 0000 013A         if (SB < 160)               motor(k,-k,-k,k);
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
; 0000 013B         if(x<=30)                   motor(-v,v,v,-v);
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
; 0000 013C         else if(x>30 && x<=100)     motor(0,v,0,-v);
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
; 0000 013D         else if(x>100 && x<=200)    motor(v,v,-v,-v);
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
; 0000 013E         else if(x>200 && x<=270)    motor(v,0,-v,0);
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
; 0000 013F         else if(x>270)              motor(v,-v,-v,v);
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
; 0000 0140 
; 0000 0141         }
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
; 0000 0142     else
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
; 0000 0143     {
; 0000 0144         k*=2;
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
; 0000 0145         if(SB < 200) motor(-v+k,-v-k,v-k,v+k);
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
; 0000 0146         else if (SB > 400) motor (v+k,v-k,-v-k,-v+k);
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
; 0000 0147         else motor(0,0,0,0);
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
; 0000 0148     }
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
; 0000 0149     }
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;
;void main(void)
; 0000 014C {
;PCODE: $00000388 VOL: 0
; 0000 014D #asm("wdr");
;PCODE: $00000389 VOL: 0
	wdr
;PCODE: $0000038A VOL: 0
; 0000 014E {
; 0000 014F // Declare your local variables here
; 0000 0150 
; 0000 0151 // Input/Output Ports initialization
; 0000 0152 // Port A initialization
; 0000 0153 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0154 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
; 0000 0155 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0156 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
; 0000 0157 
; 0000 0158 // Port B initialization
; 0000 0159 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=In Bit1=In Bit0=In
; 0000 015A DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
; 0000 015B // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=T Bit1=T Bit0=T
; 0000 015C PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
; 0000 015D 
; 0000 015E // Port C initialization
; 0000 015F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0160 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
; 0000 0161 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0162 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
; 0000 0163 
; 0000 0164 // Port D initialization
; 0000 0165 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0166 DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
; 0000 0167 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0168 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
; 0000 0169 
; 0000 016A // Timer/Counter 0 initialization
; 0000 016B // Clock source: System Clock
; 0000 016C // Clock value: 31.250 kHz
; 0000 016D // Mode: Fast PWM top=0xFF
; 0000 016E // OC0 output: Non-Inverted PWM
; 0000 016F // Timer Period: 8.192 ms
; 0000 0170 // Output Pulse(s):
; 0000 0171 // OC0 Period: 8.192 ms Width: 0 us
; 0000 0172 TCCR0=(1<<WGM00) | (1<<COM01) | (0<<COM00) | (1<<WGM01) | (1<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
; 0000 0173 TCNT0=0x00;
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
; 0000 0174 OCR0=0x00;
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
; 0000 0175 
; 0000 0176 // Timer/Counter 1 initialization
; 0000 0177 // Clock source: System Clock
; 0000 0178 // Clock value: 31.250 kHz
; 0000 0179 // Mode: Fast PWM top=0x00FF
; 0000 017A // OC1A output: Non-Inverted PWM
; 0000 017B // OC1B output: Non-Inverted PWM
; 0000 017C // Noise Canceler: Off
; 0000 017D // Input Capture on Falling Edge
; 0000 017E // Timer Period: 8.192 ms
; 0000 017F // Output Pulse(s):
; 0000 0180 // OC1A Period: 8.192 ms Width: 0 us// OC1B Period: 8.192 ms Width: 0 us
; 0000 0181 // Timer1 Overflow Interrupt: Off
; 0000 0182 // Input Capture Interrupt: Off
; 0000 0183 // Compare A Match Interrupt: Off
; 0000 0184 // Compare B Match Interrupt: Off
; 0000 0185 TCCR1A=(1<<COM1A1) | (0<<COM1A0) | (1<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (1<<WGM10);
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
; 0000 0186 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (1<<WGM12) | (1<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
; 0000 0187 TCNT1H=0x00;
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
; 0000 0188 TCNT1L=0x00;
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
; 0000 0189 ICR1H=0x00;
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
; 0000 018A ICR1L=0x00;
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
; 0000 018B OCR1AH=0x00;
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
; 0000 018C OCR1AL=0x00;
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
; 0000 018D OCR1BH=0x00;
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
; 0000 018E OCR1BL=0x00;
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
; 0000 018F 
; 0000 0190 // Timer/Counter 2 initialization
; 0000 0191 // Clock source: System Clock
; 0000 0192 // Clock value: 31.250 kHz
; 0000 0193 // Mode: Fast PWM top=0xFF
; 0000 0194 // OC2 output: Non-Inverted PWM
; 0000 0195 // Timer Period: 8.192 ms
; 0000 0196 // Output Pulse(s):
; 0000 0197 // OC2 Period: 8.192 ms Width: 0 us
; 0000 0198 ASSR=0<<AS2;
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
; 0000 0199 TCCR2=(1<<PWM2) | (1<<COM21) | (0<<COM20) | (1<<CTC2) | (1<<CS22) | (1<<CS21) | (0<<CS20);
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
; 0000 019A TCNT2=0x00;
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
; 0000 019B OCR2=0x00;
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
; 0000 019C 
; 0000 019D // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 019E TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
; 0000 019F 
; 0000 01A0 // External Interrupt(s) initialization
; 0000 01A1 // INT0: Off
; 0000 01A2 // INT1: Off
; 0000 01A3 // INT2: Off
; 0000 01A4 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
; 0000 01A5 MCUCSR=(0<<ISC2);
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
; 0000 01A6 
; 0000 01A7 // USART initialization
; 0000 01A8 // USART disabled
; 0000 01A9 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
; 0000 01AA 
; 0000 01AB // Analog Comparator initialization
; 0000 01AC // Analog Comparator: Off
; 0000 01AD // The Analog Comparator's positive input is
; 0000 01AE // connected to the AIN0 pin
; 0000 01AF // The Analog Comparator's negative input is
; 0000 01B0 // connected to the AIN1 pin
; 0000 01B1 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
; 0000 01B2 
; 0000 01B3 // ADC initialization
; 0000 01B4 // ADC Clock frequency: 62.500 kHz
; 0000 01B5 // ADC Voltage Reference: AVCC pin
; 0000 01B6 // ADC Auto Trigger Source: ADC Stopped
; 0000 01B7 ADMUX=ADC_VREF_TYPE;
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
; 0000 01B8 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
; 0000 01B9 SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
; 0000 01BA 
; 0000 01BB // SPI initialization
; 0000 01BC // SPI disabled
; 0000 01BD SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
; 0000 01BE 
; 0000 01BF // TWI initialization
; 0000 01C0 // TWI disabled
; 0000 01C1 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
; 0000 01C2 
; 0000 01C3 // Bit-Banged I2C Bus initialization
; 0000 01C4 // I2C Port: PORTB
; 0000 01C5 // I2C SDA bit: 1
; 0000 01C6 // I2C SCL bit: 0
; 0000 01C7 // Bit Rate: 100 kHz
; 0000 01C8 // Note: I2C settings are specified in the
; 0000 01C9 // Project|Configure|C Compiler|Libraries|I2C menu.
; 0000 01CA i2c_init();
;PCODE: $000003D1 VOL: 0
; 0000 01CB 
; 0000 01CC // Alphanumeric LCD initialization
; 0000 01CD // Connections are specified in the
; 0000 01CE // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 01CF // RS - PORTC Bit 0
; 0000 01D0 // RD - PORTC Bit 1
; 0000 01D1 // EN - PORTC Bit 2
; 0000 01D2 // D4 - PORTC Bit 4
; 0000 01D3 // D5 - PORTC Bit 5
; 0000 01D4 // D6 - PORTC Bit 6
; 0000 01D5 // D7 - PORTC Bit 7
; 0000 01D6 // Characters/line: 16
; 0000 01D7 lcd_init(16);
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
; 0000 01D8 
; 0000 01D9 // Watchdog Timer initialization
; 0000 01DA // Watchdog Timer Prescaler: OSC/256k
; 0000 01DB WDTCR=(0<<WDTOE) | (1<<WDE) | (1<<WDP2) | (0<<WDP1) | (0<<WDP0);
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
; 0000 01DC 
; 0000 01DD }
; 0000 01DE 
; 0000 01DF delay_ms(3000);
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
; 0000 01E0 c = compass_read(1);
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
; 0000 01E1 v=255;
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
; 0000 01E2 while (1)
;PCODE: $000003DF VOL: 0
; 0000 01E3       {
; 0000 01E4       #asm("wdr");
;PCODE: $000003E0 VOL: 0
	wdr
;PCODE: $000003E1 VOL: 0
; 0000 01E5       sensor();
;PCODE: $000003E2 VOL: 0
; 0000 01E6       read_pixy();
;PCODE: $000003E3 VOL: 0
; 0000 01E7       if(SKB>600 || SKR>600 || SKL>600)
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
; 0000 01E8         {
; 0000 01E9         if(SKR>600)
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
; 0000 01EA             {
; 0000 01EB             if(SL>500) {motor(v,-v,-v,v);out='L';}
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
; 0000 01EC             else       {motor(-v,v,v,-v);out='R';}
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
; 0000 01ED 
; 0000 01EE             }
; 0000 01EF         else if(SKL>600)
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
; 0000 01F0             {
; 0000 01F1             if(SR>500) {motor(-v,v,v,-v);out='R';}
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
; 0000 01F2             else       {motor(v,-v,-v,v);out='L';}
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
; 0000 01F3 
; 0000 01F4             }
; 0000 01F5 
; 0000 01F6 
; 0000 01F7         }
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
; 0000 01F8       else
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
; 0000 01F9         {
; 0000 01FA         while(out=='R' && a!=0)
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
; 0000 01FB             {
; 0000 01FC             sensor();
;PCODE: $00000444 VOL: 0
; 0000 01FD             read_pixy();
;PCODE: $00000445 VOL: 0
; 0000 01FE             if(SR>300)   motor(-v,v,v,-v);
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
; 0000 01FF             else  motor(0,0,0,0);
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
; 0000 0200             }
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
; 0000 0201         while(out=='L' && a!=0)
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
; 0000 0202             {
; 0000 0203             sensor();
;PCODE: $0000046D VOL: 0
; 0000 0204             read_pixy();
;PCODE: $0000046E VOL: 0
; 0000 0205             if(SL>300)   motor(v,-v,-v,v);
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
; 0000 0206             else  motor(0,0,0,0);
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
; 0000 0207             }
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
; 0000 0208         if(SKF>600 && out==0)
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
; 0000 0209             {
; 0000 020A             motor(-v,-v,v,v);
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
; 0000 020B             delay_ms(300);
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
; 0000 020C             out='F';
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
; 0000 020D             }
; 0000 020E         while(out=='F' && a!=0)
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
; 0000 020F             {
; 0000 0210             sensor();
;PCODE: $000004AC VOL: 0
; 0000 0211             read_pixy();
;PCODE: $000004AD VOL: 0
; 0000 0212             motor(0,0,0,0);
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
; 0000 0213             }
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
; 0000 0214 
; 0000 0215         catch();
;PCODE: $000004B9 VOL: 0
; 0000 0216         out=0;
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
; 0000 0217         }
;PCODE: $000004BC VOL: 0
; 0000 0218       }
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
; 0000 0219 }
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
